{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/backlogReducer.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","actions/backlogActions.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UseManagement/Login.js","components/UseManagement/Register.js","securityUtils/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["CreateProjectButton","Fragment","Link","to","className","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","errorStatus","status","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","onClick","bind","Component","connect","window","confirm","delete","Dashboard","getProjects","projects","errors","location","reload","map","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","e","preventDefault","href","headerLinks","security","user","authenticated","userIsAuthenticated","fullName","userNotAuthenticated","AddProject","start_date","end_date","onChange","onSubmit","nextProps","console","log","setState","target","name","value","newProject","errorMessage","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","projectSequence","backlog","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","getProject","match","params","updateProject","disabled","updateProjectTask","backlog_id","pt_id","patch","ProjectTask","deleteProjectTask","priorityString","PriorityClass","priority","draggableId","index","provided","draggableProps","dragHandleProps","ref","innerRef","summary","acceptanceCriteria","Backlog","onDragEnd","result","destination","source","droppableId","projectItems","Object","keys","items","column","project_task_item","sourceitems","destinationitems","i","length","splice","setItems","tasks","project_tasks_prop","droppableProps","withRouter","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","addProjectTask","UpdateProjectTask","created_At","getProjectTask","updatedProjectTask","Landing","Login","username","password","login","LoginRequest","setItem","decoded","jwt_decode","Register","confirmPassword","newUser","createUser","component","otherProps","Route","render","Redirect","jwtToken","currentTime","Date","now","exp","App","exact","path","Switch","SecureRoute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b56adbd7.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from \"react-router-dom\"\n\nconst CreateProjectButton =() =>{\n    return (\n        <React.Fragment>\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n                Create a Project\n            </Link>\n        </React.Fragment>\n    )\n}\n\nexport default CreateProjectButton;\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_USER = \"SET_USER\";\n\n","import axios from \"axios\";\nimport { GET_ERRORS,GET_PROJECTS,GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\n\nexport const createProject=(project,history) => async dispatch =>{\n    try {\n        await axios.post(\"/api/project\",project)\n        history.push(\"/dashboard\")\n        dispatch({\n            type:GET_ERRORS,\n            payload:{}\n        })\n    } catch (error) {\n        dispatch({\n            type:GET_ERRORS,\n            payload:error.response.data,\n            errorStatus: error.response.status\n        })\n    }\n}\n\nexport const getProjects =() =>async dispatch =>{\n    try{\n        const res = await axios.get(\"/api/project/all\")\n        dispatch({\n            type:GET_PROJECTS,\n            payload:res.data\n        })\n        dispatch({\n            type:GET_ERRORS,\n            payload:{}\n        })\n    }\n    catch(error){\n        dispatch({\n            type:GET_ERRORS,\n            payload:error.response.data,\n            errorStatus: error.response.status\n        })\n    }\n\n}\n\nexport const getProject =(id,history) =>async dispatch =>{\n    try {\n        const res = await axios.get(`/api/project/${id}`)\n        dispatch({\n            type:GET_PROJECT,\n            payload:res.data\n        })\n        dispatch({\n            type:GET_ERRORS,\n            payload:{}\n        })\n\n    } catch (error) {\n        history.push(\"/dashboard\")\n    }\n\n}\n\nexport const deleteProject =(id) =>async dispatch =>{\n    if(window.confirm(\"Are you sure? This will delete the project and all the data related to it\")){\n        try {\n            await axios.delete(`/api/project/${id}`)\n            dispatch({\n                type:DELETE_PROJECT,\n                payload:id\n            })\n            dispatch({\n                type:GET_ERRORS,\n                payload:{}\n            })\n        } catch (error) {\n            dispatch({\n                type:GET_ERRORS,\n                payload:error.response.data,\n                errorStatus: error.response.status\n            })\n        }\n\n    }\n\n}","import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\"\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport { deleteProject } from '../../actions/projectActions'\n\nclass ProjectItem extends Component {\n    onDeleteClick = id =>{\n        this.props.deleteProject(id);\n    }\n\n    render() {\n        const { project } = this.props;\n        return (\n            <div className=\"container\">\n                        <div className=\"card card-body bg-light mb-3\">\n                            <div className=\"row\">\n                                <div className=\"col-2\">\n                                    <span className=\"mx-auto\">{project.projectIdentifier}</span>\n                                </div>\n                                <div className=\"col-lg-6 col-md-4 col-8\">\n                                    <h3>{project.projectName}</h3>\n                                    <p>{project.description}</p>\n                                </div>\n                                <div className=\"col-md-4 d-none d-lg-block\">\n                                    <ul className=\"list-group\">\n                                        <Link to ={`/projectBoard/${project.projectIdentifier}`}>\n                                            <li className=\"list-group-item board\">\n                                                <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                                            </li>\n                                        </Link>\n                                        <Link to={`/updateProject/${project.projectIdentifier}`}>\n                                            <li className=\"list-group-item update\">\n                                                <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                                            </li>\n                                        </Link>\n                                            <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this,project.projectIdentifier)}>\n                                                <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                                            </li>\n                                        \n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n        )\n    }\n}\n\nProjectItem.propTypes={\n    deleteProject:PropTypes.func.isRequired,\n}\n\n\nexport default  connect(null,{deleteProject}) (ProjectItem);","import React, { Component } from 'react'\nimport CreateProjectButton from './Project/CreateProjectButton';\nimport ProjectItem from './Project/ProjectItem';\nimport {connect} from \"react-redux\";\nimport {getProjects} from \"../actions/projectActions\"\nimport PropTypes from \"prop-types\"\n\n\nclass Dashboard extends Component {\n\n    componentDidMount(){\n        this.props.getProjects();\n    }\n\n    render() {\n\n        const {projects} = this.props.project;\n        //console.log(this.state);\n        const {errors} = this.props;\n        //console.log(this.props);\n        if(errors !=null && errors.errorStatus===401) {\n            //console.log(errors);\n            window.location.reload();\n        }\n\n        return (\n\n        <div className=\"projects\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <h1 className=\"display-4 text-center\">Projects</h1>\n                        <br />\n                            <CreateProjectButton />\n                        <br />\n                        <hr />\n\n                        {projects.map(project =>(\n                            <ProjectItem project={project}/>\n                        ))\n                            //<!-- Project Item Component -->\n\n                        }\n\n\n\n\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nDashboard.propTypes ={\n    project: PropTypes.object.isRequired,\n    getProjects:PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state =>({\n    project: state.project,\n    errors:state.errors,\n})\n\nexport default connect(mapStateToProps,{getProjects}) (Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token =>{\n    if(token){\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    }\n    else{\n        delete axios.defaults.headers.common[\"Authorization\"] \n    }\n}\n\nexport default setJWTToken;","import axios from \"axios\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport { GET_ERRORS, SET_USER } from \"./types\";\nimport jwt_decode from \"jwt-decode\"\n\nexport const createUser = (user,history) =>async dispatch =>{\n    try {\n        await axios.post(\"/api/users/register\",user);\n        history.push(\"/login\");\n        dispatch({\n            type: GET_ERRORS,\n            payload:{}\n        })\n    } catch (error) {\n        dispatch({\n            type:GET_ERRORS,\n            payload:error.response.data,\n            errorStatus: error.response.status\n        })\n    }\n};\n\nexport const login = LoginRequest =>async dispatch =>{\n    try {\n        //login request\n        const res = await axios.post(\"/api/users/login\",LoginRequest);\n        //extract token from res.data\n\n        const {token} = res.data;\n       // store the token in local\n       localStorage.setItem(\"jwtToken\",token);\n       //set out token in header\n       setJWTToken(token);\n       //decode tokenn on React\n        const decoded = jwt_decode (token)\n       //dispatch to our security Reducer\n\n       dispatch({\n           type:SET_USER,\n           payload:decoded\n       })\n       dispatch({\n        type:GET_ERRORS,\n        payload:{}\n    })\n\n    } catch (error) {\n        dispatch({\n            type:GET_ERRORS,\n            payload:error.response.data,\n            errorStatus: error.response.status\n        })\n    }\n}\n\nexport const logout =() =>dispatch =>{\n    localStorage.removeItem(\"jwtToken\");\n    setJWTToken(false);\n    dispatch({\n        type:SET_USER,\n        payload:{}\n    })\n    dispatch({\n        type:GET_ERRORS,\n        payload:{}\n    })\n\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { logout } from '../../actions/securityActions';\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\n\nclass Header extends Component {\n    logout(e){\n        e.preventDefault();\n        this.props.logout();\n        window.location.href = \"/\";\n    }\n\n\n    render() {\n        const {user,authenticated} = this.props.security;\n        const userIsAuthenticated=(\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/dashboard\" className=\"nav-link\" >\n                            Dashboard\n                        </Link>\n                    </li>\n                </ul>\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <a  className=\"nav-link \" >\n                            <i className=\"fas fa-user-circle\" />{user.fullName}\n                        </a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/logout\" className=\"nav-link\" onClick = {this.logout.bind(this)}>\n                            Logout\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n        const userNotAuthenticated=(\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/register\" className=\"nav-link \" >\n                            Sign Up\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/login\" className=\"nav-link\" >\n                            Login\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        )\n\n        let headerLinks;\n\n        if(authenticated && user){\n            headerLinks = userIsAuthenticated\n        }\n        else{\n            headerLinks = userNotAuthenticated\n        }\n\n\n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n            <div className=\"container\">\n                <Link to=\"\" className=\"navbar-brand\" href=\"Dashboard.html\">\n                    Personal Project Management Tool\n                </Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\n                    <span className=\"navbar-toggler-icon\" />\n                </button>\n    \n                {headerLinks}\n            </div>\n        </nav>\n        )\n    }\n}\n\nHeader.propTypes ={\n    \n    logout : PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired,\n    security:PropTypes.object.isRequired\n}\nconst mapStateToProps = state =>({\n    security:state.security,\n    errors:state.errors,\n\n});\n\nexport default connect(mapStateToProps,{logout}) (Header);\n","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport {createProject} from \"../../actions/projectActions\"\nimport classnames from \"classnames\"\n\nclass AddProject extends Component {\n    constructor(){\n        super();\n        this.state={\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors:{},\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    //life cycle hooks\n    UNSAFE_componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            console.log(\"nextProps\" +nextProps.errors)\n            this.setState({\n                errors:nextProps.errors\n            })\n        }\n    }\n\n    onChange(e){\n        this.setState({\n            [e.target.name] : e.target.value,\n        })\n\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const newProject = {\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date,\n        };\n        this.props.createProject(newProject,this.props.history)\n    }\n\n    render() {\n        let {errors} = this.state;\n        if(errors.errorStatus===401) {\n            //console.log(errors);\n            window.location.reload();\n        }\n        if(errors.errorMessage != null) errors = errors.errorMessage;\n\n        //console.log(errors);\n        return (\n            <div>\n                <div className=\"project\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                                <hr />\n                                <form onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.projectName\n                                        })} placeholder=\"Project Name\" name=\"projectName\" value={this.state.projectName} onChange={this.onChange} />\n                                        {errors.projectName && (\n                                            <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.projectIdentifier\n                                        })}  placeholder=\"Unique Project ID\" name=\"projectIdentifier\" value ={this.state.projectIdentifier} onChange={this.onChange} />\n                                        {errors.projectIdentifier && (\n                                            <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <textarea className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.description\n                                        })}  placeholder=\"Project Description\" name = \"description\" value={this.state.description} onChange={this.onChange} ></textarea>\n                                        {errors.description && (\n                                            <div className=\"invalid-feedback\">{errors.description}</div>\n                                        )}\n                                    </div>\n                                    <h6>Start Date</h6>\n                                    <div className=\"form-group\">\n                                        <input type=\"date\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.start_date\n                                        })}  name=\"start_date\" value={this.state.start_date} onChange={this.onChange} />\n                                        {errors.start_date && (\n                                            <div className=\"invalid-feedback\">{errors.start_date}</div>\n                                        )}\n                                    </div>\n                                    <h6>Estimated End Date</h6>\n                                    <div className=\"form-group\">\n                                        <input type=\"date\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.end_date\n                                        })}  name=\"end_date\" value={this.state.end_date} onChange={this.onChange} />\n                                        {errors.end_date && (\n                                            <div className=\"invalid-feedback\">{errors.end_date}</div>\n                                        )}\n                                    </div>\n\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nAddProject.propTypes ={\n    createProject : PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired,\n}\nconst mapStateToProps = state =>({\n    errors:state.errors,\n\n});\n\nexport default connect(mapStateToProps,{createProject}) (AddProject)","import {GET_BACKLOG,GET_PROJECT_TASK,DELETE_PROJECT_TASK} from \"../actions/types\"\n\nconst initialState = {\n    project_tasks:[],\n    project_task:{}\n}\nexport default function backlogReducer(state=initialState,action){\n    switch(action.type){\n        case GET_BACKLOG:\n            return {\n                ...state,\n                project_tasks: action.payload\n            };\n\n        case GET_PROJECT_TASK:\n            return {\n                ...state,\n                project_task: action.payload\n            }\n        case DELETE_PROJECT_TASK:\n            return {\n                ...state,\n                project_tasks:state.project_tasks.filter(project_task=>project_task.projectSequence !== action.payload)\n            }\n\n\n\n        default:\n            return state;\n    }\n}","import {GET_ERRORS} from \"../actions/types\";\n\nconst initialState = {};\nexport default function errorReducer(state=initialState,action){\n    switch(action.type){\n        case GET_ERRORS:\n            //console.log(action);\n            return {\n                errorStatus: action.errorStatus,\n                errorMessage:action.payload\n            };\n\n        default: \n            return state;\n    }\n}","import { GET_PROJECTS,GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\n\nconst initialState = {\n    projects:[],\n    project:{}\n};\n\nexport default function projectReducer(state = initialState, action){\n    switch(action.type){\n        case GET_PROJECTS:\n            return {\n                ...state,\n                projects: action.payload\n            };\n        case GET_PROJECT:\n            return {\n                ...state,\n                project:action.payload\n            }\n        case DELETE_PROJECT:\n            return {\n                ...state,\n                projects:state.projects.filter(project=>project.projectSequence !== action.payload)\n            }\n\n        default:\n            return state;\n    }\n}","import { SET_USER } from \"../actions/types\";\n\n\nconst initialState = {\n    user:{},\n    authenticated : false\n};\n\nconst booleanActionPayload =(payload)=>{\n    if(payload){\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport default function securityReducer(state = initialState, action){\n    switch(action.type){\n        case SET_USER:\n            return {\n                ...state,\n                authenticated : booleanActionPayload(action.payload),\n                user: action.payload\n            };\n\n\n        default:\n            return state;\n    }\n}","import { combineReducers} from \"redux\";\nimport backlogReducer from \"./backlogReducer\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport securityReducer from \"./securityReducer\";\nexport default combineReducers({\n    errors:errorReducer,\n    project:projectReducer,\n    backlog: backlogReducer,\n    security:securityReducer\n});","import { createStore,applyMiddleware,compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\"\n\nconst initialState = {}\nconst middleware = [thunk]\n\nlet store ;\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n    store = createStore(rootReducer,initialState,compose(applyMiddleware(...middleware),ReactReduxDevTools));\n} else {\n    store = createStore(rootReducer,initialState,compose(applyMiddleware(...middleware)));\n}\n\n\n\n\nexport default store;","import React, { Component } from 'react'\nimport {getProject,createProject} from \"../../actions/projectActions\"\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport classnames from \"classnames\"\n\n\nclass UpdateProject extends Component {\n    constructor(){\n        super();\n        this.state={\n            id:\"\",\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors:{},\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    //life cycle hooks\n    UNSAFE_componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({\n                errors:nextProps.errors\n            })\n        }\n        const {id,\n        projectName,\n        projectIdentifier,\n        description,\n        start_date,\n        end_date,}=nextProps.project;\n        this.setState({\n            id,\n        projectName,\n        projectIdentifier,\n        description,\n        start_date,\n        end_date,\n        })\n\n    }\n\n    componentDidMount(){\n        this.props.getProject(this.props.match.params.id,this.props.history)\n    }\n\n    onChange(e){\n        this.setState({\n            [e.target.name] : e.target.value,\n        })\n\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const updateProject = {\n            id:this.state.id,\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date,\n        };\n        this.props.createProject(updateProject,this.props.history)\n    }\n\n    render() {\n        let {errors} = this.state;\n        if(errors.errorStatus===401) {\n            //console.log(errors);\n            window.location.reload();\n        }\n        if(errors.errorMessage != null) errors = errors.errorMessage;\n        return (\n            <div className=\"project\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h5 className=\"display-4 text-center\">Update Project form</h5>\n                            <hr />\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.projectName\n                                        })} placeholder=\"Project Name\" name=\"projectName\" value={this.state.projectName} onChange={this.onChange} />\n                                    {errors.projectName && (\n                                        <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.projectIdentifier\n                                        })} placeholder=\"Unique Project ID\" name=\"projectIdentifier\" value ={this.state.projectIdentifier}\n                                        disabled />\n                                    {errors.projectIdentifier && (\n                                        <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\n                                    )}\n                                </div>\n                                \n                                <div className=\"form-group\">\n                                    <textarea className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.description\n                                        })} placeholder=\"Project Description\" name = \"description\" value={this.state.description} onChange={this.onChange}></textarea>\n                                    {errors.description && (\n                                        <div className=\"invalid-feedback\">{errors.description}</div>\n                                    )}\n                                </div>\n                                <h6>Start Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.start_date\n                                        })} name=\"start_date\" value={this.state.start_date} onChange={this.onChange}/>\n                                    {errors.start_date && (\n                                        <div className=\"invalid-feedback\">{errors.start_date}</div>\n                                    )}\n                                </div>\n                                <h6>Estimated End Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.end_date\n                                        })}  name=\"end_date\" value={this.state.end_date} onChange={this.onChange}/>\n                                    {errors.end_date && (\n                                        <div className=\"invalid-feedback\">{errors.end_date}</div>\n                                    )}\n                                </div>\n\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nUpdateProject.propTypes={\n    getProject:PropTypes.func.isRequired,\n    project: PropTypes.object.isRequired,\n    errors:PropTypes.object.isRequired,\n    createProject: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state =>({\n    project:state.project.project,\n    errors:state.errors,\n});\n\nexport default connect(mapStateToProps,{getProject,createProject}) (UpdateProject);","import axios from \"axios\";\nimport { DELETE_PROJECT_TASK, GET_BACKLOG, GET_ERRORS, GET_PROJECT_TASK } from \"./types\";\n\nexport const addProjectTask = (backlog_id,project_task,history) =>async dispatch =>{\n    try {\n        await axios.post( `/api/backlog/${backlog_id}`,project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type:GET_ERRORS,\n            payload:{}\n        })\n    } catch (error) {\n        dispatch({\n            type:GET_ERRORS,\n            payload:error.response.data,\n            errorStatus: error.response.status\n        })\n    }\n\n}\n\nexport const getBacklog = (backlog_id) => async dispatch =>{\n    try{\n        const res = await axios.get(`/api/backlog/${backlog_id}`)\n        console.log(res.data);\n        dispatch({\n            type:GET_BACKLOG,\n            payload:res.data\n        });\n        dispatch({\n            type:GET_ERRORS,\n            payload:{}\n        })\n    }\n    catch(error){\n        console.log(error);\n        dispatch({\n            type:GET_ERRORS,\n            payload:error.response.data,\n            errorStatus: error.response.status\n        })\n    }\n}\n\nexport const getProjectTask =(backlog_id,pt_id,history) =>async dispatch =>{\n    try{\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`)\n        console.log(res.data);\n        dispatch({\n            type:GET_PROJECT_TASK,\n            payload:res.data\n        });\n        dispatch({\n            type:GET_ERRORS,\n            payload:{}\n        })\n    }\n    catch(error){\n        history.push(\"/dashboard\");\n    }\n}\n\nexport const updateProjectTask =(backlog_id,pt_id,project_task,history) =>async dispatch=>{\n    try {\n        await axios.patch( `/api/backlog/${backlog_id}/${pt_id}`,project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type:GET_ERRORS,\n            payload:{}\n        })\n    } catch (error) {\n        console.log(error);\n        dispatch({\n            type:GET_ERRORS,\n            payload:error.response.data,\n            errorStatus: error.response.status\n        })\n    }\n}\n\nexport const deleteProjectTask =(backlog_id,pt_id) => async dispatch =>{\n    if(window.confirm(\"Are you sure? This will delete the project task and all the data related to it\")){\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`)\n        dispatch({\n            type:DELETE_PROJECT_TASK,\n            payload:pt_id\n        })\n    }\n}\n\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport { deleteProjectTask } from '../../../actions/backlogActions';\nimport { Draggable } from 'react-beautiful-dnd';\n\nclass ProjectTask extends Component {\n    onDeleteClick = (backlog_id,pt_id) =>{\n        this.props.deleteProjectTask(backlog_id,pt_id);\n    }\n\n    render() {\n        const {project_task} = this.props;\n        let priorityString;\n        let PriorityClass;\n\n        if(project_task.priority===1) {\n            PriorityClass = \"bg-danger text-light\"\n            priorityString = \"HIGH\"\n        }\n        else if (project_task.priority===2){\n            PriorityClass = \"bg-warning text-light\"\n            priorityString = \"MEDIUM\"\n        }\n        else if(project_task.priority===3){\n            PriorityClass = \"bg-info text-light\"\n            priorityString = \"LOW\"\n        }\n\n        //console.log(this.props);\n\n\n        return (\n            <Draggable draggableId={project_task.projectSequence} index = {project_task.id}>\n                {(provided)=>(\n                    <div className=\"card mb-1 bg-light\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n\n                        <div className={`card-header text-primary ${PriorityClass}`}>\n                            ID: {project_task.projectSequence}-- Priority: {priorityString}\n                        </div>\n                        <div className=\"card-body bg-light\">\n                            <h5 className=\"card-title\">{project_task.summary}</h5>\n                            <p className=\"card-text text-truncate \">\n                                {project_task.acceptanceCriteria}\n                            </p>\n                            <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">\n                                View / Update\n                            </Link>\n\n                            <button className=\"btn btn-danger ml-4\" onClick={this.onDeleteClick.bind(this,project_task.projectIdentifier,project_task.projectSequence)}>\n                                Delete\n                            </button>\n                        </div>\n                    </div>\n                )}\n            </Draggable>\n        )\n    }\n}\n\nProjectTask.propTypes={\n    deleteProjectTask:PropTypes.func.isRequired,\n}\n\n\nexport default  connect(null,{deleteProjectTask}) (ProjectTask);\n","import React, { Component } from 'react'\nimport ProjectTask from './ProjectTasks/ProjectTask'\nimport {DragDropContext, Droppable} from 'react-beautiful-dnd'\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport { updateProjectTask } from '../../actions/backlogActions'\nimport {  withRouter } from 'react-router-dom'\n\nclass Backlog extends Component {\n\n    constructor(){\n        super();\n        this.state ={\n            items:{}\n        }\n        this.setItems = this.setItems.bind(this);\n        this.onDragEnd = this.onDragEnd.bind(this);\n    }\n    onDragEnd = result =>{\n        //console.log(this.state.todoitems)\n        const {destination, source, draggableId} = result;\n        //console.log(destination);\n        if(!destination || (destination.droppableId===source.droppableId)) return;\n        let projectItems = {}\n        for(let column of Object.keys(this.state.items)){\n            projectItems[column] = [...this.state.items[column]]\n        }\n        let sourceitems = projectItems[source.droppableId]\n        let destinationitems=projectItems[destination.droppableId]\n\n        let project_task = {}\n        let project_task_item\n        for(let i=0;i<sourceitems.length;i++){\n            if(sourceitems[i].props.project_task.projectSequence===draggableId){\n                project_task = sourceitems[i].props.project_task;\n                project_task_item = sourceitems[i]\n                //console.log(project_task)\n                sourceitems.splice(i,1);\n            }\n        }\n\n\n        destinationitems.push(project_task_item)\n        \n\n        this.setState({\n            items:projectItems\n        });\n\n\n        project_task.status = destination.droppableId\n\n        this.props.updateProjectTask(project_task.projectIdentifier,project_task.projectSequence,project_task,this.props.history)\n        return;\n    }\n\n    setItems=(props)=>{\n        const {project_tasks_prop} = props;\n        const tasks=project_tasks_prop.map(project_task =>(\n            //<p> {project_task}</p>\n            \n            <ProjectTask key={project_task.id} project_task={project_task} />\n           \n\n        ));\n\n        let projectItems = {\n            \"TO_DO\":[],\n            \"IN_PROGRESS\":[],\n            \"DONE\":[]\n        }\n\n        for(let i=0;i<tasks.length;i++){\n            //console.log(tasks[i])\n            if(tasks[i].props.project_task.status ===\"TO_DO\"){\n                //this.setState({ todoitems: this.state.todoitems.push(tasks[i])});\n                projectItems[\"TO_DO\"].push(tasks[i]);\n            }\n            else if(tasks[i].props.project_task.status ===\"IN_PROGRESS\"){\n                //this.setState({ inprogressitems: this.state.inprogressitems.push(tasks[i])});\n                projectItems[\"IN_PROGRESS\"].push(tasks[i]);\n            }\n            else if(tasks[i].props.project_task.status ===\"DONE\"){\n                //this.setState({ doneitems: this.state.doneitems.push(tasks[i])});\n                projectItems[\"DONE\"].push(tasks[i]);\n            }\n\n\n        }\n\n        this.setState({\n            items:projectItems\n        } );\n        //console.log(this.state);\n    }\n\n    componentWillReceiveProps(nextProps){\n        this.setItems(nextProps)\n    }\n\n    componentDidMount(){\n        this.setItems(this.props)\n    }\n\n    render() {\n\n\n        return (\n            <DragDropContext onDragEnd ={this.onDragEnd}>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Droppable droppableId=\"TO_DO\">\n                    {(provided)=>(\n                        <div className=\"col-md-4\" ref={provided.innerRef} {...provided.droppableProps}>\n                            <div className=\"card text-center mb-2\">\n                                <div className=\"card-header bg-secondary text-white\">\n                                    <h3>TO DO</h3>\n                                </div>\n                            </div>\n\n\n                            {this.state.items[\"TO_DO\"]}\n\n                            {provided.placeholder}\n                        </div>\n\n                        \n                    )\n\n                    }\n                    </Droppable>\n                        \n                    <Droppable droppableId=\"IN_PROGRESS\">\n                    {(provided)=>(\n                        <div className=\"col-md-4\" ref={provided.innerRef} {...provided.droppableProps}>\n                            <div className=\"card text-center mb-2\">\n                                <div className=\"card-header bg-primary text-white\">\n                                    <h3>In Progress</h3>\n                                </div>\n                            </div>\n                            {\n                            //<!-- SAMPLE PROJECT TASK STARTS HERE -->\n\n                            //<!-- SAMPLE PROJECT TASK ENDS HERE -->\n                            }\n                            {this.state.items[\"IN_PROGRESS\"]}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                    </Droppable>\n                    \n                    <Droppable droppableId=\"DONE\">\n                    {(provided)=>(\n                        <div className=\"col-md-4\" ref={provided.innerRef} {...provided.droppableProps}>\n                            <div className=\"card text-center mb-2\">\n                                <div className=\"card-header bg-success text-white\">\n                                    <h3>Done</h3>\n                                </div>\n                            </div>\n                            {\n                            //<!-- SAMPLE PROJECT TASK STARTS HERE -->\n\n                            //<!-- SAMPLE PROJECT TASK ENDS HERE -->\n                            }\n                            {this.state.items[\"DONE\"]}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                    </Droppable>\n                    \n                </div>\n            </div>\n            </DragDropContext>\n        )\n    }\n}\n\nBacklog.propTypes ={\n    updateProjectTask:PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state =>({\n    errors:state.errors,\n});\n\n\nexport default withRouter( connect(mapStateToProps,{updateProjectTask}) (Backlog))\n","import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\"\nimport Backlog from './Backlog';\nimport { getBacklog } from '../../actions/backlogActions';\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\"\n\nclass ProjectBoard extends Component {\n    constructor(){\n        super();\n        this.state ={\n            errors:{}\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n          this.setState({ errors: nextProps.errors });\n        }\n      }\n\n    componentDidMount(){\n        const {id} = this.props.match.params;\n        this.props.getBacklog(id);\n    }\n//<Backlog project_tasks_prop={project_tasks} />\n    render() {\n        const {id} = this.props.match.params;\n        const {project_tasks} = this.props.backlog;\n\n        let {errors} = this.state;\n        if(errors.errorStatus===401) {\n            //console.log(errors);\n            window.location.reload();\n        }\n        if(errors.errorMessage != null) errors = errors.errorMessage;\n\n        let BoardContent;\n\n        const boardAlgorithm = (errors,project_tasks)=>{\n            if(project_tasks.length <1){\n                if(errors.projectNotFound){\n                    return (\n                        <div className=\"alert alert-danger text-center\" role='alert'>\n                            {errors.projectNotFound}\n\n                        </div>\n                    )\n                }\n                else if(errors.projectIdentifier){\n                    return (\n                        <div className=\"alert alert-danger text-center\" role='alert'>\n                            {errors.projectIdentifier}\n\n                        </div>\n                    )\n                }\n                else{\n                    return (\n                        <div className=\"alert alert-info text-center\" role='alert'>\n                            No Project Tasks in this Board\n                        </div>\n                    )\n                }\n            }\n            else{\n                return (\n                        <Backlog project_tasks_prop={project_tasks} />\n                )\n            }\n        };\n\n        BoardContent = boardAlgorithm(errors,project_tasks)\n\n        return (\n            <div className=\"container\">\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n                    <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n                </Link>\n                <br />\n                <hr />\n\n                {BoardContent}\n\n            </div>\n        )\n\n    }\n}\n\nProjectBoard.propTypes ={\n    backlog: PropTypes.object.isRequired,\n    getBacklog:PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state =>({\n    backlog: state.backlog,\n    errors: state.errors,\n\n})\n\nexport default connect(mapStateToProps,{getBacklog}) (ProjectBoard);\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport {addProjectTask} from \"../../../actions/backlogActions\"\nimport classnames from \"classnames\"\n\nclass AddProjectTask extends Component {\n\n    constructor(props){\n        super(props)\n        const {id} = this.props.match.params;\n\n        this.state={\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: 0,\n            dueDate: \"\",\n            projectIdentifier: id,\n            errors:{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    //life cycle hooks\n    UNSAFE_componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({\n                errors:nextProps.errors\n            })\n        }\n    }\n\n    onChange(e){\n        this.setState({\n            [e.target.name] : e.target.value,\n        })\n\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const newProject = {\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate,\n        };\n        this.props.addProjectTask(this.state.projectIdentifier,newProject,this.props.history)\n    }\n\n    render() {\n        const {id} = this.props.match.params;\n        let {errors} = this.state;\n        if(errors.errorStatus===401) {\n            //console.log(errors);\n            window.location.reload();\n        }\n        if(errors.errorMessage != null) errors = errors.errorMessage;\n        return (\n            <div className=\"add-PBI\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link to={ `/projectBoard/${id}`} className=\"btn btn-light\">\n                                Back to Project Board\n                            </Link>\n                            <h4 className=\"display-4 text-center\">Add Project Task</h4>\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\n                                            \"is-invalid\":errors.summary\n                                        })}\n                                    name=\"summary\" placeholder=\"Project Task summary\" value={this.state.summary} onChange={this.onChange} />\n                                    {errors.summary && (\n                                            <div className=\"invalid-feedback\">{errors.summary}</div>\n                                        )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea className=\"form-control form-control-lg\" placeholder=\"Acceptance Criteria\" name=\"acceptanceCriteria\" value={this.state.acceptanceCriteria} onChange={this.onChange} ></textarea>\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\" className=\"form-control form-control-lg\" name=\"dueDate\" value={this.state.dueDate} onChange={this.onChange} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <select className=\"form-control form-control-lg\" name=\"priority\" value={this.state.priority} onChange={this.onChange} >\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <select className=\"form-control form-control-lg\" name=\"status\" value = {this.state.status} onChange={this.onChange} >\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nAddProjectTask.propTypes ={\n    addProjectTask : PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired\n}\nconst mapStateToProps = state =>({\n    errors:state.errors,\n\n});\n\nexport default  connect(mapStateToProps,{addProjectTask}) (AddProjectTask);\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { getProjectTask, updateProjectTask } from '../../../actions/backlogActions';\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport classnames from \"classnames\"\n\nclass UpdateProjectTask extends Component {\n    constructor(){\n        super();\n        //const {backlog_id,pt_id} = this.props.match.params;\n\n        this.state={\n            id:\"\",\n            projectSequence: \"\",\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: 0,\n            dueDate: \"\",\n            projectIdentifier: \"\",\n            created_At:\"\",\n            errors:{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    //life cycle hooks\n    UNSAFE_componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({\n                errors:nextProps.errors\n            })\n        }\n        const {id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            projectIdentifier,\n            created_At,}=nextProps.project_task;\n            this.setState({\n                id,\n                projectSequence,\n                summary,\n                acceptanceCriteria,\n                status,\n                priority,dueDate,\n                projectIdentifier,\n                created_At,\n            })\n    }\n\n    componentDidMount(){\n        const {backlog_id} = this.props.match.params;\n        const {pt_id} = this.props.match.params;\n        this.props.getProjectTask(backlog_id,pt_id,this.props.history)\n    }\n\n    onChange(e){\n        this.setState({\n            [e.target.name] : e.target.value,\n        })\n\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const {backlog_id,pt_id} = this.props.match.params;\n        const updatedProjectTask = {\n            id:this.state.id,\n            projectSequence: this.state.projectSequence,\n            projectIdentifier: this.state.projectIdentifier,\n            created_At:this.state.created_At,\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate,\n        };\n        //console.log(this)\n        this.props.updateProjectTask(backlog_id,pt_id,updatedProjectTask,this.props.history);\n        //this.props.history.push(`/projectBoard/${backlog_id}`)\n    }\n\n\n\n    render() {\n        const {backlog_id} = this.props.match.params;\n\n        let {errors} = this.state;\n        if(errors.errorStatus===401) {\n            //console.log(errors);\n            window.location.reload();\n        }\n        if(errors.errorMessage != null) errors = errors.errorMessage;\n\n        return (\n            <div className=\"add-PBI\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link to={ `/projectBoard/${backlog_id}`} className=\"btn btn-light\">\n                                Back to Project Board\n                            </Link>\n                            <h4 className=\"display-4 text-center\">Add Project Task</h4>\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\n                                            \"is-invalid\":errors.summary\n                                        })}\n                                    name=\"summary\" placeholder=\"Project Task summary\" value={this.state.summary} onChange={this.onChange} />\n                                    {errors.summary && (\n                                            <div className=\"invalid-feedback\">{errors.summary}</div>\n                                        )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea className=\"form-control form-control-lg\" placeholder=\"Acceptance Criteria\" name=\"acceptanceCriteria\" value={this.state.acceptanceCriteria} onChange={this.onChange} ></textarea>\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\" className=\"form-control form-control-lg\" name=\"dueDate\" value={this.state.dueDate} onChange={this.onChange} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <select className=\"form-control form-control-lg\" name=\"priority\" value={this.state.priority} onChange={this.onChange} >\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <select className=\"form-control form-control-lg\" name=\"status\" value = {this.state.status} onChange={this.onChange} >\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nUpdateProjectTask.propTypes ={\n    getProjectTask : PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired,\n    project_task: PropTypes.object.isRequired,\n    updateProjectTask:PropTypes.func.isRequired,\n}\nconst mapStateToProps = state =>({\n    project_task: state.backlog.project_task,\n    errors:state.errors,\n\n});\n\nexport default connect(mapStateToProps,{getProjectTask,updateProjectTask}) (UpdateProjectTask)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n    componentDidMount(){\n        if(this.props.security.authenticated){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"landing\">\n                <div className=\"light-overlay landing-inner text-dark\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 text-center\">\n                                <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\n                                <p className=\"lead\">\n                                    Create your account to join active projects or start your own\n                                </p>\n                                <hr />\n                                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                                    Sign Up\n                                </Link>\n                                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                                    Login\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nLanding.propTypes ={\n    \n    errors:PropTypes.object.isRequired,\n    security:PropTypes.object.isRequired\n}\nconst mapStateToProps = state =>({\n    security:state.security,\n    errors:state.errors,\n\n});\n\nexport default connect(mapStateToProps) (Landing);\n","import React, { Component } from 'react'\nimport { login } from '../../actions/securityActions';\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport classnames from \"classnames\"\n\nclass Login extends Component {\n    constructor(){\n        super();\n        this.state={\n            username: \"\",\n            password: \"\",\n            errors:{},\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps){\n        if(nextProps.security.authenticated){\n            this.props.history.push(\"/dashboard\");\n        }\n        if(nextProps.errors){\n            this.setState({\n                errors:nextProps.errors\n            })\n        }\n    }\n\n    UNSAFE_componentDidMount(){\n        if(this.props.security.authenticated){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    onChange(e){\n        this.setState({\n            [e.target.name] : e.target.value,\n        })\n\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const user = {\n            username: this.state.username,\n            password: this.state.password,\n        };\n        this.props.login(user)\n    }\n\n\n    render() {\n        let {errors} = this.state;\n        if(errors.errorMessage != null) errors = errors.errorMessage;\n        return (\n            <div className=\"login\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Log In</h1>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"email\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.username\n                                        })} placeholder=\"Email Address\" name=\"username\" value = {this.state.username} onChange={this.onChange} />\n                                        {errors.username && (\n                                            <div className=\"invalid-feedback\">{errors.username}</div>\n                                        )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.password\n                                        })}placeholder=\"Password\" name=\"password\" value = {this.state.password} onChange={this.onChange}/>\n                                        {errors.password && (\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\n                                        )}\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nLogin.propTypes ={\n    \n    login : PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired,\n    security:PropTypes.object.isRequired\n}\nconst mapStateToProps = state =>({\n    security:state.security,\n    errors:state.errors,\n\n});\n\nexport default connect(mapStateToProps,{login}) (Login);\n","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport classnames from \"classnames\"\nimport { createUser } from '../../actions/securityActions'\n\nclass Register extends Component {\n\n    constructor(){\n        super();\n        this.state={\n            username: \"\",\n            fullName: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            errors:{},\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({\n                errors:nextProps.errors\n            })\n        }\n    }\n\n    componentDidMount(){\n        if(this.props.security.authenticated){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    onChange(e){\n        this.setState({\n            [e.target.name] : e.target.value,\n        })\n\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const newUser = {\n            username: this.state.username,\n            fullName: this.state.fullName,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword,\n        };\n        this.props.createUser(newUser,this.props.history)\n    }\n\n    render() {\n        let {errors} = this.state;\n        if(errors.errorStatus===401) {\n            //console.log(errors);\n            window.location.reload();\n        }\n        if(errors.errorMessage != null) errors = errors.errorMessage;\n        //console.log(errors);\n        return (\n            <div className=\"register\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\n                            <p className=\"lead text-center\">Create your Account</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.fullName\n                                        })}  placeholder=\"Name\" name=\"fullName\" value ={this.state.fullName } onChange ={this.onChange}\n                                         />\n                                    {errors.fullName && (\n                                            <div className=\"invalid-feedback\">{errors.fullName}</div>\n                                        )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"email\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.username\n                                        })} placeholder=\"Email Address\" name=\"username\" value ={this.state.username } onChange ={this.onChange}/>\n                                    {errors.username && (\n                                            <div className=\"invalid-feedback\">{errors.username}</div>\n                                        )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.password\n                                        })} placeholder=\"Password\" name=\"password\" value ={this.state.password } onChange ={this.onChange}/>\n                                    {errors.password && (\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\n                                        )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.confirmPassword\n                                        })} placeholder=\"Confirm Password\"\n                                        name=\"confirmPassword\" value ={this.state.confirmPassword } onChange ={this.onChange}/>\n                                        {errors.confirmPassword && (\n                                            <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\n                                        )}\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nRegister.propTypes ={\n    \n    createUser : PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired,\n    security:PropTypes.object.isRequired\n}\nconst mapStateToProps = state =>({\n    errors:state.errors,\n    security:state.security,\n\n});\n\nexport default connect(mapStateToProps,{createUser}) (Register);\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\"\n\nconst SecuredRoute = ({component:Component,security, ...otherProps}) =>(\n    <Route {...otherProps} render ={props => security.authenticated===true?(<Component {...props} />) : (<Redirect to=\"login\"/>)} />\n);\n\nSecuredRoute.propTypes ={\n    security:PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state =>({\n    security:state.security,\n});\n\nexport default connect(mapStateToProps) (SecuredRoute);\n\n","import './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport {BrowserRouter as Router, Route,Switch} from \"react-router-dom\";\nimport AddProject from './components/Project/AddProject';\nimport {Provider} from \"react-redux\";\nimport store from './store';\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './components/Layout/Landing';\nimport Login from './components/UseManagement/Login';\nimport Register from './components/UseManagement/Register';\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from './securityUtils/setJWTToken';\nimport { SET_USER } from './actions/types';\nimport { logout } from './actions/securityActions';\nimport SecureRoute from './securityUtils/SecureRoute';\nimport { Component } from 'react';\n\nconst{jwtToken} = localStorage;\n\nif(jwtToken){\n  setJWTToken(jwtToken);\n  const decoded = jwt_decode(jwtToken);\n  store.dispatch({\n    type:SET_USER,\n    payload:decoded\n  })\n\n  const currentTime = Date.now()/1000;\n  if(decoded.exp<currentTime){\n    //handle logout\n    store.dispatch(logout())\n    window.location.href = \"/\";\n  }\n\n}\n\nclass App extends Component{\n  render(){\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //public Routes\n            }\n            <Route exact path=\"/\" component ={Landing}/>\n            <Route exact path=\"/login\" component ={Login}/>\n            <Route exact path=\"/register\" component ={Register}/>\n            {\n              //Private Routes\n            }\n            <Switch>\n            <SecureRoute exact path=\"/addProject\" component ={AddProject} />\n            <SecureRoute exact path=\"/dashboard\" component ={Dashboard} />\n            <SecureRoute exact path=\"/updateProject/:id\" component ={UpdateProject} />\n            <SecureRoute exact path =\"/projectBoard/:id\" component={ProjectBoard} />\n            <SecureRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n            <SecureRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask} />\n            </Switch>\n  \n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n/*\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          {\n            //public Routes\n          }\n          <Route exact path=\"/\" component ={Landing}/>\n          <Route exact path=\"/login\" component ={Login}/>\n          <Route exact path=\"/register\" component ={Register}/>\n          {\n            //Private Routes\n          }\n          <Switch>\n          <SecureRoute exact path=\"/addProject\" component ={AddProject} />\n          <SecureRoute exact path=\"/dashboard\" component ={Dashboard} />\n          <SecureRoute exact path=\"/updateProject/:id\" component ={UpdateProject} />\n          <SecureRoute exact path =\"/projectBoard/:id\" component={ProjectBoard} />\n          <SecureRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n          <SecureRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask} />\n          </Switch>\n\n        </div>\n      </Router>\n    </Provider>\n  );\n}*/\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}