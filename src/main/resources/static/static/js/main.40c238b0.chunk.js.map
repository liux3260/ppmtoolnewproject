{"version":3,"sources":["../node_modules/typescript/lib sync","components/Project/CreateProjectButton.js","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/backlogReducer.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UseManagement/Login.js","components/UseManagement/Register.js","securityUtils/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","CreateProjectButton","Fragment","Link","to","className","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","props","deleteProject","this","projectIdentifier","projectName","description","onClick","bind","Component","connect","window","confirm","delete","Dashboard","getProjects","projects","map","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","preventDefault","location","href","headerLinks","security","user","authenticated","userIsAuthenticated","fullName","userNotAuthenticated","errors","AddProject","start_date","end_date","onChange","onSubmit","nextProps","setState","target","name","value","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","projectSequence","backlog","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","getProject","match","params","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","PriorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoitems","inprogressitems","doneitems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","console","log","AddProjectTask","dueDate","addProjectTask","UpdateProjectTask","created_At","getProjectTask","updatedProjectTask","updateProjectTask","patch","Landing","Login","username","password","login","LoginRequest","setItem","decoded","jwt_decode","Register","confirmPassword","newUser","createUser","component","otherProps","Route","render","Redirect","jwtToken","currentTime","Date","now","exp","App","exact","path","Switch","SecureRoute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"oHAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,oTCKVC,EAVY,WACvB,OACI,cAAC,IAAMC,SAAP,UACI,cAACC,EAAA,EAAD,CAAMC,GAAG,cAAcC,UAAU,sBAAjC,iC,gDCNCC,EAAa,aACbC,EAAe,eACfC,EAAc,cACdC,EAAiB,iBAEjBC,EAAc,cACdC,EAAmB,mBACnBC,EAAsB,sBAEtBC,EAAW,WCLXC,EAAc,SAACC,EAAQC,GAAT,8CAAqB,WAAMC,GAAN,SAAAC,EAAA,+EAElCC,IAAMC,KAAK,eAAeL,GAFQ,OAGxCC,EAAQK,KAAK,cACbJ,EAAS,CACLK,KAAKhB,EACLiB,QAAQ,KAN4B,gDASxCN,EAAS,CACLK,KAAKhB,EACLiB,QAAQ,KAAMC,SAASC,OAXa,yDAArB,uD,gBCGrBC,E,4MACFC,cAAgB,SAAA3B,GACZ,EAAK4B,MAAMC,cAAc7B,I,4CAG7B,WACI,IAAOe,EAAWe,KAAKF,MAAhBb,QACP,OACI,qBAAKV,UAAU,YAAf,SACY,qBAAKA,UAAU,+BAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,sBAAMA,UAAU,UAAhB,SAA2BU,EAAQgB,sBAEvC,sBAAK1B,UAAU,0BAAf,UACI,6BAAKU,EAAQiB,cACb,4BAAIjB,EAAQkB,iBAEhB,qBAAK5B,UAAU,6BAAf,SACI,qBAAIA,UAAU,aAAd,UACI,cAACF,EAAA,EAAD,CAAMC,GAAE,wBAAoBW,EAAQgB,mBAApC,SACI,oBAAI1B,UAAU,wBAAd,SACI,mBAAGA,UAAU,4BAAb,iCAGR,cAACF,EAAA,EAAD,CAAMC,GAAE,yBAAoBW,EAAQgB,mBAApC,SACI,oBAAI1B,UAAU,yBAAd,SACI,mBAAGA,UAAU,kBAAb,sCAGJ,oBAAIA,UAAU,yBAAyB6B,QAASJ,KAAKH,cAAcQ,KAAKL,KAAKf,EAAQgB,mBAArF,SACI,mBAAG1B,UAAU,0BAAb,+C,GA/BtB+B,aAiDVC,cAAQ,KAAK,CAACR,cDZF,SAAC7B,GAAD,8CAAO,WAAMiB,GAAN,SAAAC,EAAA,0DAC5BoB,OAAOC,QAAQ,6EADa,gCAErBpB,IAAMqB,OAAN,uBAA6BxC,IAFR,OAG3BiB,EAAS,CACLK,KAAKb,EACLc,QAAQvB,IALe,2CAAP,wDCYZqC,CAA+BX,GChDzCe,E,uKAEF,WACIX,KAAKF,MAAMc,gB,oBAGf,WAEI,IAAOC,EAAYb,KAAKF,MAAMb,QAAvB4B,SAEP,OAEA,qBAAKtC,UAAU,WAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,wBAAd,sBACA,uBACI,cAAC,EAAD,IACJ,uBACA,uBAECsC,EAASC,KAAI,SAAA7B,GAAO,OACjB,cAAC,EAAD,CAAaA,QAASA,oB,GAvB1BqB,aAkDTC,eALS,SAAAQ,GAAK,MAAI,CAC7B9B,QAAS8B,EAAM9B,WAIoB,CAAC2B,YFtCd,yDAAK,WAAMzB,GAAN,eAAAC,EAAA,sEAETC,IAAM2B,IAAI,oBAFD,OAErBC,EAFqB,OAG3B9B,EAAS,CACLK,KAAKf,EACLgB,QAAQwB,EAAItB,OALW,2CAAL,wDEsCXY,CAAwCI,GC/CxCO,EATK,SAAAC,GACbA,EACC9B,IAAM+B,SAASC,QAAQC,OAAvB,cAAiDH,SAG1C9B,IAAM+B,SAASC,QAAQC,OAAvB,e,QC0CFC,EAAQ,kBAAK,SAAApC,GACtBqC,aAAaC,WAAW,YACxBP,GAAY,GACZ/B,EAAS,CACLK,KAAKT,EACLU,QAAQ,OChDViC,E,4JACF,SAAO/D,GACHA,EAAEgE,iBACF3B,KAAKF,MAAMyB,SACXf,OAAOoB,SAASC,KAAO,M,oBAI3B,WACI,IA4CIC,EA5CJ,EAA6B9B,KAAKF,MAAMiC,SAAjCC,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,cACNC,EACF,sBAAK3D,UAAU,2BAA2BL,GAAG,aAA7C,UACI,oBAAIK,UAAU,qBAAd,SACI,oBAAIA,UAAU,WAAd,SACI,cAACF,EAAA,EAAD,CAAMC,GAAG,aAAaC,UAAU,WAAhC,2BAMR,qBAAIA,UAAU,qBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,oBAAIA,UAAU,YAAd,UACI,mBAAGA,UAAU,uBAAwByD,EAAKG,cAGlD,oBAAI5D,UAAU,WAAd,SACI,cAACF,EAAA,EAAD,CAAMC,GAAG,UAAUC,UAAU,WAAW6B,QAAWJ,KAAKuB,OAAOlB,KAAKL,MAApE,4BAQVoC,EACF,qBAAK7D,UAAU,2BAA2BL,GAAG,aAA7C,SAEI,qBAAIK,UAAU,qBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAACF,EAAA,EAAD,CAAMC,GAAG,YAAYC,UAAU,YAA/B,uBAIJ,oBAAIA,UAAU,WAAd,SACI,cAACF,EAAA,EAAD,CAAMC,GAAG,SAASC,UAAU,WAA5B,0BAkBhB,OAPIuD,EADDG,GAAiBD,EACFE,EAGAE,EAKd,qBAAK7D,UAAU,sDAAf,SACA,sBAAKA,UAAU,YAAf,UACI,cAACF,EAAA,EAAD,CAAMC,GAAG,GAAGC,UAAU,eAAesD,KAAK,iBAA1C,8CAGA,wBAAQtD,UAAU,iBAAiBiB,KAAK,SAAS,cAAY,WAAW,cAAY,cAApF,SACI,sBAAMjB,UAAU,0BAGnBuD,W,GAzEIxB,aA4FNC,eANS,SAAAQ,GAAK,MAAI,CAC7BgB,SAAShB,EAAMgB,SACfM,OAAOtB,EAAMsB,UAIsB,CAACd,UAAzBhB,CAAmCmB,G,wCC5F5CY,E,kDACF,aAAc,IAAD,8BACT,gBACKvB,MAAM,CACPb,YAAa,GACbD,kBAAmB,GACnBE,YAAa,GACboC,WAAY,GACZC,SAAU,GACVH,OAAO,IAEX,EAAKI,SAAW,EAAKA,SAASpC,KAAd,gBAChB,EAAKqC,SAAW,EAAKA,SAASrC,KAAd,gBAXP,E,6DAeb,SAA0BsC,GACnBA,EAAUN,QACTrC,KAAK4C,SAAS,CACVP,OAAOM,EAAUN,W,sBAK7B,SAAS1E,GACLqC,KAAK4C,SAAL,eACKjF,EAAEkF,OAAOC,KAAQnF,EAAEkF,OAAOE,U,sBAKnC,SAASpF,GACLA,EAAEgE,iBACF,IAAMqB,EAAa,CACf9C,YAAaF,KAAKe,MAAMb,YACxBD,kBAAmBD,KAAKe,MAAMd,kBAC9BE,YAAaH,KAAKe,MAAMZ,YACxBoC,WAAYvC,KAAKe,MAAMwB,WACvBC,SAAUxC,KAAKe,MAAMyB,UAEzBxC,KAAKF,MAAMd,cAAcgE,EAAWhD,KAAKF,MAAMZ,W,oBAGnD,WACI,IAAOmD,EAAUrC,KAAKe,MAAfsB,OAGP,OACI,gCACA,6BAAKA,EAAOnC,cACR,qBAAK3B,UAAU,UAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,oBAAIA,UAAU,wBAAd,iCACA,uBACA,uBAAMmE,SAAU1C,KAAK0C,SAArB,UACI,sBAAKnE,UAAU,aAAf,UACI,uBAAOiB,KAAK,OAAOjB,UAAW0E,IAAW,gCAAgC,CACrE,aAAaZ,EAAOnC,cACpBgD,YAAY,eAAeJ,KAAK,cAAcC,MAAO/C,KAAKe,MAAMb,YAAauC,SAAUzC,KAAKyC,WAC/FJ,EAAOnC,aACJ,qBAAK3B,UAAU,mBAAf,SAAmC8D,EAAOnC,iBAGlD,sBAAK3B,UAAU,aAAf,UACI,uBAAOiB,KAAK,OAAOjB,UAAW0E,IAAW,gCAAgC,CACrE,aAAaZ,EAAOpC,oBACnBiD,YAAY,oBAAoBJ,KAAK,oBAAoBC,MAAQ/C,KAAKe,MAAMd,kBAAmBwC,SAAUzC,KAAKyC,WAClHJ,EAAOpC,mBACJ,qBAAK1B,UAAU,mBAAf,SAAmC8D,EAAOpC,uBAGlD,sBAAK1B,UAAU,aAAf,UACI,0BAAUA,UAAW0E,IAAW,gCAAgC,CAC5D,aAAaZ,EAAOlC,cACnB+C,YAAY,sBAAsBJ,KAAO,cAAcC,MAAO/C,KAAKe,MAAMZ,YAAasC,SAAUzC,KAAKyC,WACzGJ,EAAOlC,aACJ,qBAAK5B,UAAU,mBAAf,SAAmC8D,EAAOlC,iBAGlD,4CACA,sBAAK5B,UAAU,aAAf,UACI,uBAAOiB,KAAK,OAAOjB,UAAW0E,IAAW,gCAAgC,CACrE,aAAaZ,EAAOE,aACnBO,KAAK,aAAaC,MAAO/C,KAAKe,MAAMwB,WAAYE,SAAUzC,KAAKyC,WACnEJ,EAAOE,YACJ,qBAAKhE,UAAU,mBAAf,SAAmC8D,EAAOE,gBAGlD,oDACA,sBAAKhE,UAAU,aAAf,UACI,uBAAOiB,KAAK,OAAOjB,UAAW0E,IAAW,gCAAgC,CACrE,aAAaZ,EAAOG,WACnBM,KAAK,WAAWC,MAAO/C,KAAKe,MAAMyB,SAAUC,SAAUzC,KAAKyC,WAC/DJ,EAAOG,UACJ,qBAAKjE,UAAU,mBAAf,SAAmC8D,EAAOG,cAIlD,uBAAOhD,KAAK,SAASjB,UAAU,sD,GApG1C+B,aAwHVC,eALS,SAAAQ,GAAK,MAAI,CAC7BsB,OAAOtB,EAAMsB,UAIsB,CAACrD,iBAAzBuB,CAA0C+B,G,wBC5HnDa,EAAe,CACjBC,cAAc,GACdC,aAAa,ICFXF,EAAe,GCCfA,EAAe,CACjBtC,SAAS,GACT5B,QAAQ,ICFNkE,EAAe,CACjBnB,KAAK,GACLC,eAAgB,GAGdqB,GAAsB,SAAC7D,GACzB,QAAGA,GCJQ8D,eAAgB,CAC3BlB,OHHW,WAAoC,IAA3BtB,EAA0B,uDAApBoC,EAAaK,EAAO,uCAC9C,OAAOA,EAAOhE,MACV,KAAKhB,EACD,OAAOgF,EAAO/D,QAElB,QACI,OAAOsB,IGFf9B,QFCW,WAAuC,IAA9B8B,EAA6B,uDAArBoC,EAAcK,EAAO,uCACjD,OAAOA,EAAOhE,MACV,KAAKf,EACD,OAAO,2BACAsC,GADP,IAEIF,SAAU2C,EAAO/D,UAEzB,KAAKf,EACD,OAAO,2BACAqC,GADP,IAEI9B,QAAQuE,EAAO/D,UAEvB,KAAKd,EACD,OAAO,2BACAoC,GADP,IAEIF,SAASE,EAAMF,SAAS4C,QAAO,SAAAxE,GAAO,OAAEA,EAAQyE,kBAAoBF,EAAO/D,aAGnF,QACI,OAAOsB,IEnBf4C,QJFW,WAAoC,IAA3B5C,EAA0B,uDAApBoC,EAAaK,EAAO,uCAC9C,OAAOA,EAAOhE,MACV,KAAKZ,EACD,OAAO,2BACAmC,GADP,IAEIqC,cAAeI,EAAO/D,UAG9B,KAAKZ,EACD,OAAO,2BACAkC,GADP,IAEIsC,aAAcG,EAAO/D,UAE7B,KAAKX,EACD,OAAO,2BACAiC,GADP,IAEIqC,cAAcrC,EAAMqC,cAAcK,QAAO,SAAAJ,GAAY,OAAEA,EAAaK,kBAAoBF,EAAO/D,aAKvG,QACI,OAAOsB,IInBfgB,SDQW,WAAuC,IAA9BhB,EAA6B,uDAArBoC,EAAcK,EAAO,uCACjD,OAAOA,EAAOhE,MACV,KAAKT,EACD,OAAO,2BACAgC,GADP,IAEIkB,cAAgBqB,GAAqBE,EAAO/D,SAC5CuC,KAAMwB,EAAO/D,UAIrB,QACI,OAAOsB,MExBboC,GAAe,GACfS,GAAa,CAACC,KAGdC,GAAqBtD,OAAOuD,8BAAgCvD,OAAOuD,+BAY1DC,GATXxD,OAAOyD,UAAUC,UAAUC,SAAS,WAAaL,GACzCM,YAAYC,GAAYlB,GAAamB,YAAQC,IAAe,WAAf,EAAmBX,IAAYE,KAE5EM,YAAYC,GAAYlB,GAAamB,YAAQC,IAAe,WAAf,EAAmBX,MCPtEY,G,kDACF,aAAc,IAAD,8BACT,gBACKzD,MAAM,CACP7C,GAAG,GACHgC,YAAa,GACbD,kBAAmB,GACnBE,YAAa,GACboC,WAAY,GACZC,SAAU,GACVH,OAAO,IAEX,EAAKI,SAAW,EAAKA,SAASpC,KAAd,gBAChB,EAAKqC,SAAW,EAAKA,SAASrC,KAAd,gBAZP,E,6DAgBb,SAA0BsC,GACnBA,EAAUN,QACTrC,KAAK4C,SAAS,CACVP,OAAOM,EAAUN,SAGzB,MAMSM,EAAU1D,QANZf,EAAP,EAAOA,GACPgC,EADA,EACAA,YACAD,EAFA,EAEAA,kBACAE,EAHA,EAGAA,YACAoC,EAJA,EAIAA,WACAC,EALA,EAKAA,SALA,EAMAH,OACArC,KAAK4C,SAAS,CACV1E,KACJgC,cACAD,oBACAE,cACAoC,aACAC,e,+BAKJ,WACIxC,KAAKF,MAAM2E,WAAWzE,KAAKF,MAAM4E,MAAMC,OAAOzG,GAAG8B,KAAKF,MAAMZ,W,sBAGhE,SAASvB,GACLqC,KAAK4C,SAAL,eACKjF,EAAEkF,OAAOC,KAAQnF,EAAEkF,OAAOE,U,sBAKnC,SAASpF,GACLA,EAAEgE,iBACF,IAAMiD,EAAgB,CAClB1G,GAAG8B,KAAKe,MAAM7C,GACdgC,YAAaF,KAAKe,MAAMb,YACxBD,kBAAmBD,KAAKe,MAAMd,kBAC9BE,YAAaH,KAAKe,MAAMZ,YACxBoC,WAAYvC,KAAKe,MAAMwB,WACvBC,SAAUxC,KAAKe,MAAMyB,UAEzBxC,KAAKF,MAAMd,cAAc4F,EAAc5E,KAAKF,MAAMZ,W,oBAGtD,WACI,IAAOmD,EAAUrC,KAAKe,MAAfsB,OACP,OACI,qBAAK9D,UAAU,UAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,oBAAIA,UAAU,wBAAd,iCACA,uBACA,uBAAMmE,SAAU1C,KAAK0C,SAArB,UACI,sBAAKnE,UAAU,aAAf,UACI,uBAAOiB,KAAK,OAAOjB,UAAW0E,IAAW,gCAAgC,CACjE,aAAaZ,EAAOnC,cACpBgD,YAAY,eAAeJ,KAAK,cAAcC,MAAO/C,KAAKe,MAAMb,YAAauC,SAAUzC,KAAKyC,WACnGJ,EAAOnC,aACJ,qBAAK3B,UAAU,mBAAf,SAAmC8D,EAAOnC,iBAGlD,sBAAK3B,UAAU,aAAf,UACI,uBAAOiB,KAAK,OAAOjB,UAAW0E,IAAW,gCAAgC,CACjE,aAAaZ,EAAOpC,oBACpBiD,YAAY,oBAAoBJ,KAAK,oBAAoBC,MAAQ/C,KAAKe,MAAMd,kBAChF4E,UAAQ,IACXxC,EAAOpC,mBACJ,qBAAK1B,UAAU,mBAAf,SAAmC8D,EAAOpC,uBAIlD,sBAAK1B,UAAU,aAAf,UACI,0BAAUA,UAAW0E,IAAW,gCAAgC,CACxD,aAAaZ,EAAOlC,cACpB+C,YAAY,sBAAsBJ,KAAO,cAAcC,MAAO/C,KAAKe,MAAMZ,YAAasC,SAAUzC,KAAKyC,WAC5GJ,EAAOlC,aACJ,qBAAK5B,UAAU,mBAAf,SAAmC8D,EAAOlC,iBAGlD,4CACA,sBAAK5B,UAAU,aAAf,UACI,uBAAOiB,KAAK,OAAOjB,UAAW0E,IAAW,gCAAgC,CACjE,aAAaZ,EAAOE,aACpBO,KAAK,aAAaC,MAAO/C,KAAKe,MAAMwB,WAAYE,SAAUzC,KAAKyC,WACtEJ,EAAOE,YACJ,qBAAKhE,UAAU,mBAAf,SAAmC8D,EAAOE,gBAGlD,oDACA,sBAAKhE,UAAU,aAAf,UACI,uBAAOiB,KAAK,OAAOjB,UAAW0E,IAAW,gCAAgC,CACjE,aAAaZ,EAAOG,WACnBM,KAAK,WAAWC,MAAO/C,KAAKe,MAAMyB,SAAUC,SAAUzC,KAAKyC,WACnEJ,EAAOG,UACJ,qBAAKjE,UAAU,mBAAf,SAAmC8D,EAAOG,cAIlD,uBAAOhD,KAAK,SAASjB,UAAU,mD,GAxHnC+B,aA+IbC,gBALS,SAAAQ,GAAK,MAAI,CAC7B9B,QAAQ8B,EAAM9B,QAAQA,QACtBoD,OAAOtB,EAAMsB,UAGsB,CAACoC,WbxHf,SAACvG,EAAGgB,GAAJ,8CAAe,WAAMC,GAAN,eAAAC,EAAA,+EAEdC,IAAM2B,IAAN,uBAA0B9C,IAFZ,OAE1B+C,EAF0B,OAGhC9B,EAAS,CACLK,KAAKd,EACLe,QAAQwB,EAAItB,OALgB,gDAShCT,EAAQK,KAAK,cATmB,yDAAf,uDawH0BP,iBAApCuB,CAAqDiE,IChJ9DM,G,4MACFjF,cAAgB,SAACkF,EAAWC,GACxB,EAAKlF,MAAMmF,kBAAkBF,EAAWC,I,4CAG5C,WACI,IACIE,EACAC,EAFG9B,EAAgBrD,KAAKF,MAArBuD,aAkBP,OAd2B,IAAxBA,EAAa+B,UACZD,EAAgB,uBAChBD,EAAiB,QAEY,IAAxB7B,EAAa+B,UAClBD,EAAgB,wBAChBD,EAAiB,UAEW,IAAxB7B,EAAa+B,WACjBD,EAAgB,qBAChBD,EAAiB,OAKjB,sBAAK3G,UAAU,qBAAf,UAEI,sBAAKA,UAAS,mCAA8B4G,GAA5C,iBACS9B,EAAaK,gBADtB,gBACoDwB,KAEpD,sBAAK3G,UAAU,qBAAf,UACI,oBAAIA,UAAU,aAAd,SAA4B8E,EAAagC,UACzC,mBAAG9G,UAAU,2BAAb,SACK8E,EAAaiC,qBAElB,cAACjH,EAAA,EAAD,CAAMC,GAAE,6BAAwB+E,EAAapD,kBAArC,YAA0DoD,EAAaK,iBAAmBnF,UAAU,kBAA5G,2BAIA,wBAAQA,UAAU,sBAAsB6B,QAASJ,KAAKH,cAAcQ,KAAKL,KAAKqD,EAAapD,kBAAkBoD,EAAaK,iBAA1H,8B,GAvCMpD,aAqDVC,eAAQ,KAAK,CAAC0E,kBCQE,SAACF,EAAWC,GAAZ,8CAAsB,WAAM7F,GAAN,SAAAC,EAAA,0DAC/CoB,OAAOC,QAAQ,kFADgC,gCAExCpB,IAAMqB,OAAN,uBAA6BqE,EAA7B,YAA2CC,IAFH,OAG9C7F,EAAS,CACLK,KAAKV,EACLW,QAAQuF,IALkC,2CAAtB,wDDRhBzE,CAAmCuE,IEoBpCS,G,4JA3EX,WAWI,IAVA,IACMC,EADuBxF,KAAKF,MAA3B2F,mBACwB3E,KAAI,SAAAuC,GAAY,OAE3C,aADA,CACC,GAAD,CAAmCA,aAAcA,GAA/BA,EAAanF,OAG/BwH,EAAW,GACXC,EAAiB,GACjBC,EAAW,GAEPC,EAAE,EAAEA,EAAEL,EAAMM,OAAOD,IACkB,UAAtCL,EAAMK,GAAG/F,MAAMuD,aAAa0C,OAC3BL,EAAUnG,KAAKiG,EAAMK,IAEqB,gBAAtCL,EAAMK,GAAG/F,MAAMuD,aAAa0C,OAChCJ,EAAgBpG,KAAKiG,EAAMK,IAEe,SAAtCL,EAAMK,GAAG/F,MAAMuD,aAAa0C,QAChCH,EAAUrG,KAAKiG,EAAMK,IAO7B,OACI,qBAAKtH,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,qBAAKA,UAAU,sCAAf,SACI,2CAKPmH,KAIL,sBAAKnH,UAAU,WAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,qBAAKA,UAAU,oCAAf,SACI,iDAQPoH,KAGL,sBAAKpH,UAAU,WAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,qBAAKA,UAAU,oCAAf,SACI,0CAQPqH,c,GAnEHtF,aCKhB0F,I,wDACF,aAAc,IAAD,8BACT,gBACKjF,MAAO,CACRsB,OAAO,IAHF,E,6DAOb,SAA0BM,GAClBA,EAAUN,QACZrC,KAAK4C,SAAS,CAAEP,OAAQM,EAAUN,W,+BAIxC,WACI,IAAOnE,EAAM8B,KAAKF,MAAM4E,MAAMC,OAAvBzG,GACP8B,KAAKF,MAAMmG,WAAW/H,K,oBAG1B,WACI,IAIIgI,EAJGhI,EAAM8B,KAAKF,MAAM4E,MAAMC,OAAvBzG,GAyCP,OAFAgI,EAjCuB,SAAC7D,EAAOe,GAC3B,OAAGA,EAAc0C,OAAQ,EAClBzD,EAAO8D,gBAEF,qBAAK5H,UAAU,iCAAiC6H,KAAK,QAArD,SACK/D,EAAO8D,kBAKZ9D,EAAOpC,kBAEP,qBAAK1B,UAAU,iCAAiC6H,KAAK,QAArD,SACK/D,EAAOpC,oBAOZ,qBAAK1B,UAAU,+BAA+B6H,KAAK,QAAnD,4CAQA,cAAC,GAAD,CAASX,mBAAoBrC,IAK9BiD,CAtCErG,KAAKe,MAAfsB,OACiBrC,KAAKF,MAAM6D,QAA5BP,eAwCH,sBAAK7E,UAAU,YAAf,UACI,cAACF,EAAA,EAAD,CAAMC,GAAE,0BAAqBJ,GAAMK,UAAU,uBAA7C,SACI,mBAAGA,UAAU,qBAAb,oCAEJ,uBACA,uBAEC2H,S,GArEU5F,cAyFZC,gBANS,SAAAQ,GAAK,MAAI,CAC7B4C,QAAS5C,EAAM4C,QACftB,OAAQtB,EAAMsB,UAIqB,CAAC4D,WF7Ed,SAAClB,GAAD,8CAAgB,WAAM5F,GAAN,eAAAC,EAAA,+EAEhBC,IAAM2B,IAAN,uBAA0B+D,IAFV,OAE5B9D,EAF4B,OAGlCqF,QAAQC,IAAItF,EAAItB,MAChBR,EAAS,CACLK,KAAKZ,EACLa,QAAQwB,EAAItB,OANkB,gDAUlCR,EAAS,CACLK,KAAMhB,EACNiB,QAAS,KAAMC,SAASC,OAZM,yDAAhB,wDE6EXY,CAAuCyF,IC1FhDQ,G,kDAEF,WAAY1G,GAAO,IAAD,sBAEd,IAAO5B,GADP,cAAM4B,IACYA,MAAM4E,MAAMC,OAAvBzG,GAFO,OAId,EAAK6C,MAAM,CACPsE,QAAS,GACTC,mBAAoB,GACpBS,OAAQ,GACRX,SAAU,EACVqB,QAAS,GACTxG,kBAAmB/B,EACnBmE,OAAO,IAEX,EAAKI,SAAW,EAAKA,SAASpC,KAAd,gBAChB,EAAKqC,SAAW,EAAKA,SAASrC,KAAd,gBAdF,E,6DAkBlB,SAA0BsC,GACnBA,EAAUN,QACTrC,KAAK4C,SAAS,CACVP,OAAOM,EAAUN,W,sBAK7B,SAAS1E,GACLqC,KAAK4C,SAAL,eACKjF,EAAEkF,OAAOC,KAAQnF,EAAEkF,OAAOE,U,sBAKnC,SAASpF,GACLA,EAAEgE,iBACF,IAAMqB,EAAa,CACfqC,QAASrF,KAAKe,MAAMsE,QACpBC,mBAAoBtF,KAAKe,MAAMuE,mBAC/BS,OAAQ/F,KAAKe,MAAMgF,OACnBX,SAAUpF,KAAKe,MAAMqE,SACrBqB,QAASzG,KAAKe,MAAM0F,SAExBzG,KAAKF,MAAM4G,eAAe1G,KAAKe,MAAMd,kBAAkB+C,EAAWhD,KAAKF,MAAMZ,W,oBAGjF,WACI,IAAOhB,EAAM8B,KAAKF,MAAM4E,MAAMC,OAAvBzG,GACAmE,EAAUrC,KAAKe,MAAfsB,OACP,OACI,qBAAK9D,UAAU,UAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,cAACF,EAAA,EAAD,CAAMC,GAAE,wBAAoBJ,GAAMK,UAAU,gBAA5C,mCAGA,oBAAIA,UAAU,wBAAd,8BACA,mBAAGA,UAAU,mBAAb,yCACA,uBAAMmE,SAAU1C,KAAK0C,SAArB,UACI,sBAAKnE,UAAU,aAAf,UACI,uBAAOiB,KAAK,OAAOjB,UAAW0E,IAAW,+BAA+B,CAChE,aAAaZ,EAAOgD,UAE5BvC,KAAK,UAAUI,YAAY,uBAAuBH,MAAO/C,KAAKe,MAAMsE,QAAS5C,SAAUzC,KAAKyC,WAC3FJ,EAAOgD,SACA,qBAAK9G,UAAU,mBAAf,SAAmC8D,EAAOgD,aAGtD,qBAAK9G,UAAU,aAAf,SACI,0BAAUA,UAAU,+BAA+B2E,YAAY,sBAAsBJ,KAAK,qBAAqBC,MAAO/C,KAAKe,MAAMuE,mBAAoB7C,SAAUzC,KAAKyC,aAExK,0CACA,qBAAKlE,UAAU,aAAf,SACI,uBAAOiB,KAAK,OAAOjB,UAAU,+BAA+BuE,KAAK,UAAUC,MAAO/C,KAAKe,MAAM0F,QAAShE,SAAUzC,KAAKyC,aAEzH,qBAAKlE,UAAU,aAAf,SACI,yBAAQA,UAAU,+BAA+BuE,KAAK,WAAWC,MAAO/C,KAAKe,MAAMqE,SAAU3C,SAAUzC,KAAKyC,SAA5G,UACI,wBAAQM,MAAO,EAAf,6BACA,wBAAQA,MAAO,EAAf,kBACA,wBAAQA,MAAO,EAAf,oBACA,wBAAQA,MAAO,EAAf,sBAIR,qBAAKxE,UAAU,aAAf,SACI,yBAAQA,UAAU,+BAA+BuE,KAAK,SAASC,MAAS/C,KAAKe,MAAMgF,OAAQtD,SAAUzC,KAAKyC,SAA1G,UACI,wBAAQM,MAAM,GAAd,2BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,OAAd,uBAIR,uBAAOvD,KAAK,SAASjB,UAAU,mD,GA/FlC+B,aAkHbC,gBALQ,SAAAQ,GAAK,MAAI,CAC7BsB,OAAOtB,EAAMsB,UAIuB,CAACqE,eHtHX,SAAC3B,EAAW1B,EAAanE,GAAzB,8CAAoC,WAAMC,GAAN,SAAAC,EAAA,+EAEpDC,IAAMC,KAAN,uBAA4ByF,GAAa1B,GAFW,OAG1DnE,EAAQK,KAAR,wBAA8BwF,IAC9B5F,EAAS,CACLK,KAAKhB,EACLiB,QAAQ,KAN8C,gDAS1DN,EAAS,CACLK,KAAKhB,EACLiB,QAAQ,KAAMC,SAASC,OAX+B,yDAApC,wDGsHdY,CAA2CiG,IClHrDG,G,kDACF,aAAc,IAAD,8BACT,gBAGK5F,MAAM,CACP7C,GAAG,GACHwF,gBAAiB,GACjB2B,QAAS,GACTC,mBAAoB,GACpBS,OAAQ,GACRX,SAAU,EACVqB,QAAS,GACTxG,kBAAmB,GACnB2G,WAAW,GACXvE,OAAO,IAEX,EAAKI,SAAW,EAAKA,SAASpC,KAAd,gBAChB,EAAKqC,SAAW,EAAKA,SAASrC,KAAd,gBAjBP,E,6DAqBb,SAA0BsC,GACnBA,EAAUN,QACTrC,KAAK4C,SAAS,CACVP,OAAOM,EAAUN,SAGzB,MAQiBM,EAAUU,aARpBnF,EAAP,EAAOA,GACHwF,EADJ,EACIA,gBACA2B,EAFJ,EAEIA,QACAC,EAHJ,EAGIA,mBACAS,EAJJ,EAIIA,OACAX,EALJ,EAKIA,SACAqB,EANJ,EAMIA,QACAxG,EAPJ,EAOIA,kBACA2G,EARJ,EAQIA,WACA5G,KAAK4C,SAAS,CACV1E,KACAwF,kBACA2B,UACAC,qBACAS,SACAX,WAASqB,UACTxG,oBACA2G,iB,+BAIZ,WACI,IAAO7B,EAAc/E,KAAKF,MAAM4E,MAAMC,OAA/BI,WACAC,EAAShF,KAAKF,MAAM4E,MAAMC,OAA1BK,MACPhF,KAAKF,MAAM+G,eAAe9B,EAAWC,EAAMhF,KAAKF,MAAMZ,W,sBAG1D,SAASvB,GACLqC,KAAK4C,SAAL,eACKjF,EAAEkF,OAAOC,KAAQnF,EAAEkF,OAAOE,U,sBAKnC,SAASpF,GACLA,EAAEgE,iBACF,MAA2B3B,KAAKF,MAAM4E,MAAMC,OAArCI,EAAP,EAAOA,WAAWC,EAAlB,EAAkBA,MACZ8B,EAAqB,CACvB5I,GAAG8B,KAAKe,MAAM7C,GACdwF,gBAAiB1D,KAAKe,MAAM2C,gBAC5BzD,kBAAmBD,KAAKe,MAAMd,kBAC9B2G,WAAW5G,KAAKe,MAAM6F,WACtBvB,QAASrF,KAAKe,MAAMsE,QACpBC,mBAAoBtF,KAAKe,MAAMuE,mBAC/BS,OAAQ/F,KAAKe,MAAMgF,OACnBX,SAAUpF,KAAKe,MAAMqE,SACrBqB,QAASzG,KAAKe,MAAM0F,SAExBzG,KAAKF,MAAMiH,kBAAkBhC,EAAWC,EAAM8B,EAAmB9G,KAAKF,MAAMZ,W,oBAKhF,WACI,IAAOmD,EAAUrC,KAAKe,MAAfsB,OACA0C,EAAc/E,KAAKF,MAAM4E,MAAMC,OAA/BI,WAEP,OACI,qBAAKxG,UAAU,UAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,cAACF,EAAA,EAAD,CAAMC,GAAE,wBAAoByG,GAAcxG,UAAU,gBAApD,mCAGA,oBAAIA,UAAU,wBAAd,8BACA,mBAAGA,UAAU,mBAAb,yCACA,uBAAMmE,SAAU1C,KAAK0C,SAArB,UACI,sBAAKnE,UAAU,aAAf,UACI,uBAAOiB,KAAK,OAAOjB,UAAW0E,IAAW,+BAA+B,CAChE,aAAaZ,EAAOgD,UAE5BvC,KAAK,UAAUI,YAAY,uBAAuBH,MAAO/C,KAAKe,MAAMsE,QAAS5C,SAAUzC,KAAKyC,WAC3FJ,EAAOgD,SACA,qBAAK9G,UAAU,mBAAf,SAAmC8D,EAAOgD,aAGtD,qBAAK9G,UAAU,aAAf,SACI,0BAAUA,UAAU,+BAA+B2E,YAAY,sBAAsBJ,KAAK,qBAAqBC,MAAO/C,KAAKe,MAAMuE,mBAAoB7C,SAAUzC,KAAKyC,aAExK,0CACA,qBAAKlE,UAAU,aAAf,SACI,uBAAOiB,KAAK,OAAOjB,UAAU,+BAA+BuE,KAAK,UAAUC,MAAO/C,KAAKe,MAAM0F,QAAShE,SAAUzC,KAAKyC,aAEzH,qBAAKlE,UAAU,aAAf,SACI,yBAAQA,UAAU,+BAA+BuE,KAAK,WAAWC,MAAO/C,KAAKe,MAAMqE,SAAU3C,SAAUzC,KAAKyC,SAA5G,UACI,wBAAQM,MAAO,EAAf,6BACA,wBAAQA,MAAO,EAAf,kBACA,wBAAQA,MAAO,EAAf,oBACA,wBAAQA,MAAO,EAAf,sBAIR,qBAAKxE,UAAU,aAAf,SACI,yBAAQA,UAAU,+BAA+BuE,KAAK,SAASC,MAAS/C,KAAKe,MAAMgF,OAAQtD,SAAUzC,KAAKyC,SAA1G,UACI,wBAAQM,MAAM,GAAd,2BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,OAAd,uBAIR,uBAAOvD,KAAK,SAASjB,UAAU,mD,GAlI/B+B,aAwJjBC,gBANS,SAAAQ,GAAK,MAAI,CAC7BsC,aAActC,EAAM4C,QAAQN,aAC5BhB,OAAOtB,EAAMsB,UAIsB,CAACwE,eJ1HX,SAAC9B,EAAWC,EAAM9F,GAAlB,8CAA6B,WAAMC,GAAN,eAAAC,EAAA,+EAEhCC,IAAM2B,IAAN,uBAA0B+D,EAA1B,YAAwCC,IAFR,OAE5C/D,EAF4C,OAGlDqF,QAAQC,IAAItF,EAAItB,MAChBR,EAAS,CACLK,KAAKX,EACLY,QAAQwB,EAAItB,OANkC,gDAUlDT,EAAQK,KAAK,cAVqC,yDAA7B,uDI0H0BwH,kBJ5GvB,SAAChC,EAAWC,EAAM3B,EAAanE,GAA/B,8CAA0C,WAAMC,GAAN,SAAAC,EAAA,+EAE5DC,IAAM2H,MAAN,uBAA6BjC,EAA7B,YAA2CC,GAAQ3B,GAFS,OAGlEnE,EAAQK,KAAR,wBAA8BwF,IAC9B5F,EAAS,CACLK,KAAKhB,EACLiB,QAAQ,KANsD,gDASlEN,EAAS,CACLK,KAAKhB,EACLiB,QAAQ,KAAMC,SAASC,OAXuC,yDAA1C,wDI4GjBY,CAA6DoG,IC1JtEM,G,uKACF,WACOjH,KAAKF,MAAMiC,SAASE,eACnBjC,KAAKF,MAAMZ,QAAQK,KAAK,gB,oBAIhC,WAEI,OACI,qBAAKhB,UAAU,UAAf,SACI,qBAAKA,UAAU,wCAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,wBAAf,UACI,oBAAIA,UAAU,iBAAd,8CACA,mBAAGA,UAAU,OAAb,2EAGA,uBACA,cAACF,EAAA,EAAD,CAAMC,GAAG,YAAYC,UAAU,8BAA/B,qBAGA,cAACF,EAAA,EAAD,CAAMC,GAAG,SAASC,UAAU,gCAA5B,kC,GAvBV+B,aA8CPC,gBANS,SAAAQ,GAAK,MAAI,CAC7BgB,SAAShB,EAAMgB,SACfM,OAAOtB,EAAMsB,UAIF9B,CAA0B0G,IC7CnCC,G,kDACF,aAAc,IAAD,8BACT,gBACKnG,MAAM,CACPoG,SAAU,GACVC,SAAU,GACV/E,OAAO,IAEX,EAAKI,SAAW,EAAKA,SAASpC,KAAd,gBAChB,EAAKqC,SAAW,EAAKA,SAASrC,KAAd,gBARP,E,6DAYb,SAA0BsC,GACnBA,EAAUZ,SAASE,eAClBjC,KAAKF,MAAMZ,QAAQK,KAAK,cAEzBoD,EAAUN,QACTrC,KAAK4C,SAAS,CACVP,OAAOM,EAAUN,W,+BAK7B,WACOrC,KAAKF,MAAMiC,SAASE,eACnBjC,KAAKF,MAAMZ,QAAQK,KAAK,gB,sBAIhC,SAAS5B,GACLqC,KAAK4C,SAAL,eACKjF,EAAEkF,OAAOC,KAAQnF,EAAEkF,OAAOE,U,sBAKnC,SAASpF,GACLA,EAAEgE,iBACF,IAAMK,EAAO,CACTmF,SAAUnH,KAAKe,MAAMoG,SACrBC,SAAUpH,KAAKe,MAAMqG,UAEzBpH,KAAKF,MAAMuH,MAAMrF,K,oBAIrB,WACI,IAAOK,EAAUrC,KAAKe,MAAfsB,OACP,OACI,qBAAK9D,UAAU,QAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,oBAAIA,UAAU,wBAAd,oBACA,uBAAMmE,SAAU1C,KAAK0C,SAArB,UACI,sBAAKnE,UAAU,aAAf,UACI,uBAAOiB,KAAK,QAAQjB,UAAW0E,IAAW,gCAAgC,CAClE,aAAaZ,EAAO8E,WACpBjE,YAAY,gBAAgBJ,KAAK,WAAWC,MAAS/C,KAAKe,MAAMoG,SAAU1E,SAAUzC,KAAKyC,WAC5FJ,EAAO8E,UACJ,qBAAK5I,UAAU,mBAAf,SAAmC8D,EAAO8E,cAGtD,sBAAK5I,UAAU,aAAf,UACI,uBAAOiB,KAAK,WAAWjB,UAAW0E,IAAW,gCAAgC,CACrE,aAAaZ,EAAO+E,WACrBlE,YAAY,WAAWJ,KAAK,WAAWC,MAAS/C,KAAKe,MAAMqG,SAAU3E,SAAUzC,KAAKyC,WACtFJ,EAAO+E,UACJ,qBAAK7I,UAAU,mBAAf,SAAmC8D,EAAO+E,cAGtD,uBAAO5H,KAAK,SAASjB,UAAU,gD,GAxE3C+B,aA8FLC,gBANS,SAAAQ,GAAK,MAAI,CAC7BgB,SAAShB,EAAMgB,SACfM,OAAOtB,EAAMsB,UAIsB,CAACgF,MjB/EnB,SAAAC,GAAY,8CAAG,WAAMnI,GAAN,mBAAAC,EAAA,+EAGVC,IAAMC,KAAK,mBAAmBgI,GAHpB,OAGtBrG,EAHsB,OAMrBE,EAASF,EAAItB,KAAbwB,MAERK,aAAa+F,QAAQ,WAAWpG,GAEhCD,EAAYC,GAELqG,EAAUC,YAAYtG,GAG7BhC,EAAS,CACLK,KAAKT,EACLU,QAAQ+H,IAjBiB,kDAqB5BrI,EAAS,CACLK,KAAMhB,EACNiB,QAAQ,KAAMC,SAASC,OAvBC,0DAAH,wDiB+ElBY,CAAkC2G,IC7F3CQ,G,kDAEF,aAAc,IAAD,8BACT,gBACK3G,MAAM,CACPoG,SAAU,GACVhF,SAAU,GACViF,SAAU,GACVO,gBAAiB,GACjBtF,OAAO,IAEX,EAAKI,SAAW,EAAKA,SAASpC,KAAd,gBAChB,EAAKqC,SAAW,EAAKA,SAASrC,KAAd,gBAVP,E,6DAcb,SAA0BsC,GACnBA,EAAUN,QACTrC,KAAK4C,SAAS,CACVP,OAAOM,EAAUN,W,+BAK7B,WACOrC,KAAKF,MAAMiC,SAASE,eACnBjC,KAAKF,MAAMZ,QAAQK,KAAK,gB,sBAIhC,SAAS5B,GACLqC,KAAK4C,SAAL,eACKjF,EAAEkF,OAAOC,KAAQnF,EAAEkF,OAAOE,U,sBAKnC,SAASpF,GACLA,EAAEgE,iBACF,IAAMiG,EAAU,CACZT,SAAUnH,KAAKe,MAAMoG,SACrBhF,SAAUnC,KAAKe,MAAMoB,SACrBiF,SAAUpH,KAAKe,MAAMqG,SACrBO,gBAAiB3H,KAAKe,MAAM4G,iBAEhC3H,KAAKF,MAAM+H,WAAWD,EAAQ5H,KAAKF,MAAMZ,W,oBAG7C,WACI,IAAOmD,EAAUrC,KAAKe,MAAfsB,OAEP,OACI,qBAAK9D,UAAU,WAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,oBAAIA,UAAU,wBAAd,qBACA,mBAAGA,UAAU,mBAAb,iCACA,uBAAMmE,SAAU1C,KAAK0C,SAArB,UACI,sBAAKnE,UAAU,aAAf,UACI,uBAAOiB,KAAK,OAAOjB,UAAW0E,IAAW,gCAAgC,CACjE,aAAaZ,EAAOF,WACnBe,YAAY,OAAOJ,KAAK,WAAWC,MAAQ/C,KAAKe,MAAMoB,SAAWM,SAAWzC,KAAKyC,WAEzFJ,EAAOF,UACA,qBAAK5D,UAAU,mBAAf,SAAmC8D,EAAOF,cAGtD,sBAAK5D,UAAU,aAAf,UACI,uBAAOiB,KAAK,QAAQjB,UAAW0E,IAAW,gCAAgC,CAClE,aAAaZ,EAAO8E,WACpBjE,YAAY,gBAAgBJ,KAAK,WAAWC,MAAQ/C,KAAKe,MAAMoG,SAAW1E,SAAWzC,KAAKyC,WACjGJ,EAAO8E,UACA,qBAAK5I,UAAU,mBAAf,SAAmC8D,EAAO8E,cAGtD,sBAAK5I,UAAU,aAAf,UACI,uBAAOiB,KAAK,WAAWjB,UAAW0E,IAAW,gCAAgC,CACrE,aAAaZ,EAAO+E,WACpBlE,YAAY,WAAWJ,KAAK,WAAWC,MAAQ/C,KAAKe,MAAMqG,SAAW3E,SAAWzC,KAAKyC,WAC5FJ,EAAO+E,UACA,qBAAK7I,UAAU,mBAAf,SAAmC8D,EAAO+E,cAGtD,sBAAK7I,UAAU,aAAf,UACI,uBAAOiB,KAAK,WAAWjB,UAAW0E,IAAW,gCAAgC,CACrE,aAAaZ,EAAOsF,kBACpBzE,YAAY,mBAChBJ,KAAK,kBAAkBC,MAAQ/C,KAAKe,MAAM4G,gBAAkBlF,SAAWzC,KAAKyC,WAC3EJ,EAAOsF,iBACJ,qBAAKpJ,UAAU,mBAAf,SAAmC8D,EAAOsF,qBAGtD,uBAAOnI,KAAK,SAASjB,UAAU,gD,GA7FxC+B,aAmHRC,gBANS,SAAAQ,GAAK,MAAI,CAC7BsB,OAAOtB,EAAMsB,OACbN,SAAShB,EAAMgB,YAIoB,CAAC8F,WlBrHd,SAAC7F,EAAK9C,GAAN,8CAAiB,WAAMC,GAAN,SAAAC,EAAA,+EAE7BC,IAAMC,KAAK,sBAAsB0C,GAFJ,OAGnC9C,EAAQK,KAAK,UACbJ,EAAS,CACLK,KAAMhB,EACNiB,QAAQ,KANuB,gDASnCN,EAAS,CACLK,KAAMhB,EACNiB,QAAQ,KAAMC,SAASC,OAXQ,yDAAjB,wDkBqHXY,CAAuCmH,I,8CCzGvCnH,gBAJS,SAAAQ,GAAK,MAAI,CAC7BgB,SAAShB,EAAMgB,YAGJxB,EAZM,SAAC,GAAD,IAAYD,EAAZ,EAAEwH,UAAoB/F,EAAtB,EAAsBA,SAAagG,EAAnC,0BACjB,cAACC,EAAA,EAAD,2BAAWD,GAAX,IAAuBE,OAAS,SAAAnI,GAAK,OAA6B,IAAzBiC,EAASE,cAAsB,cAAC3B,EAAD,eAAeR,IAAc,cAACoI,GAAA,EAAD,CAAU5J,GAAG,iBCchH6J,GAAY3G,aAAZ2G,SAEN,GAAGA,GAAS,CACVjH,EAAYiH,IACZ,IAAMX,GAAUC,YAAWU,IAC3BnE,GAAM7E,SAAS,CACbK,KAAKT,EACLU,QAAQ+H,KAGV,IAAMY,GAAcC,KAAKC,MAAM,IAC5Bd,GAAQe,IAAIH,KAEbpE,GAAM7E,SAASoC,KACff,OAAOoB,SAASC,KAAO,KAmCZ2G,OA9Bf,WACE,OACE,cAAC,IAAD,CAAUxE,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,sBAAKzF,UAAU,MAAf,UACE,cAAC,EAAD,IAIA,cAACyJ,EAAA,EAAD,CAAOS,OAAK,EAACC,KAAK,IAAIZ,UAAYb,KAClC,cAACe,EAAA,EAAD,CAAOS,OAAK,EAACC,KAAK,SAASZ,UAAYZ,KACvC,cAACc,EAAA,EAAD,CAAOS,OAAK,EAACC,KAAK,YAAYZ,UAAYJ,KAI1C,eAACiB,EAAA,EAAD,WACA,cAACC,GAAD,CAAaH,OAAK,EAACC,KAAK,cAAcZ,UAAYxF,IAClD,cAACsG,GAAD,CAAaH,OAAK,EAACC,KAAK,aAAaZ,UAAYnH,IACjD,cAACiI,GAAD,CAAaH,OAAK,EAACC,KAAK,qBAAqBZ,UAAYtD,KACzD,cAACoE,GAAD,CAAaH,OAAK,EAACC,KAAM,oBAAoBZ,UAAW9B,KACxD,cAAC4C,GAAD,CAAaH,OAAK,EAACC,KAAK,sBAAsBZ,UAAWtB,KACzD,cAACoC,GAAD,CAAaH,OAAK,EAACC,KAAK,wCAAwCZ,UAAWnB,gBChDtEkC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASrB,OACP,cAAC,IAAMsB,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.40c238b0.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 38;","import React from 'react'\nimport {Link} from \"react-router-dom\"\n\nconst CreateProjectButton =() =>{\n    return (\n        <React.Fragment>\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n                Create a Project\n            </Link>\n        </React.Fragment>\n    )\n}\n\nexport default CreateProjectButton;\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_USER = \"SET_USER\";\n\n","import axios from \"axios\";\nimport { GET_ERRORS,GET_PROJECTS,GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\n\nexport const createProject=(project,history) => async dispatch =>{\n    try {\n        await axios.post(\"/api/project\",project)\n        history.push(\"/dashboard\")\n        dispatch({\n            type:GET_ERRORS,\n            payload:{}\n        })\n    } catch (error) {\n        dispatch({\n            type:GET_ERRORS,\n            payload:error.response.data\n        })\n    }\n}\n\nexport const getProjects =() =>async dispatch =>{\n\n    const res = await axios.get(\"/api/project/all\")\n    dispatch({\n        type:GET_PROJECTS,\n        payload:res.data\n    })\n\n}\n\nexport const getProject =(id,history) =>async dispatch =>{\n    try {\n        const res = await axios.get(`/api/project/${id}`)\n        dispatch({\n            type:GET_PROJECT,\n            payload:res.data\n        })\n\n    } catch (error) {\n        history.push(\"/dashboard\")\n    }\n\n}\n\nexport const deleteProject =(id) =>async dispatch =>{\n    if(window.confirm(\"Are you sure? This will delete the project and all the data related to it\")){\n        await axios.delete(`/api/project/${id}`)\n        dispatch({\n            type:DELETE_PROJECT,\n            payload:id\n        })\n    }\n\n}","import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\"\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport { deleteProject } from '../../actions/projectActions'\nimport classnames from \"classnames\"\n\nclass ProjectItem extends Component {\n    onDeleteClick = id =>{\n        this.props.deleteProject(id);\n    }\n\n    render() {\n        const {project} = this.props;\n        return (\n            <div className=\"container\">\n                        <div className=\"card card-body bg-light mb-3\">\n                            <div className=\"row\">\n                                <div className=\"col-2\">\n                                    <span className=\"mx-auto\">{project.projectIdentifier}</span>\n                                </div>\n                                <div className=\"col-lg-6 col-md-4 col-8\">\n                                    <h3>{project.projectName}</h3>\n                                    <p>{project.description}</p>\n                                </div>\n                                <div className=\"col-md-4 d-none d-lg-block\">\n                                    <ul className=\"list-group\">\n                                        <Link to ={`/projectBoard/${project.projectIdentifier}`}>\n                                            <li className=\"list-group-item board\">\n                                                <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                                            </li>\n                                        </Link>\n                                        <Link to={`/updateProject/${project.projectIdentifier}`}>\n                                            <li className=\"list-group-item update\">\n                                                <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                                            </li>\n                                        </Link>\n                                            <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this,project.projectIdentifier)}>\n                                                <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                                            </li>\n                                        \n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n        )\n    }\n}\n\nProjectItem.propTypes={\n    deleteProject:PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired,\n}\n\n\nexport default  connect(null,{deleteProject}) (ProjectItem);","import React, { Component } from 'react'\nimport CreateProjectButton from './Project/CreateProjectButton';\nimport ProjectItem from './Project/ProjectItem';\nimport {connect} from \"react-redux\";\nimport {getProjects} from \"../actions/projectActions\"\nimport PropTypes from \"prop-types\"\n\n\nclass Dashboard extends Component {\n\n    componentDidMount(){\n        this.props.getProjects();\n    }\n\n    render() {\n\n        const {projects} = this.props.project;\n\n        return (\n\n        <div className=\"projects\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <h1 className=\"display-4 text-center\">Projects</h1>\n                        <br />\n                            <CreateProjectButton />\n                        <br />\n                        <hr />\n\n                        {projects.map(project =>(\n                            <ProjectItem project={project}/>\n                        ))\n                            //<!-- Project Item Component -->\n\n                        }\n\n\n\n\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nDashboard.propTypes ={\n    project: PropTypes.object.isRequired,\n    getProjects:PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state =>({\n    project: state.project,\n\n})\n\nexport default connect(mapStateToProps,{getProjects}) (Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token =>{\n    if(token){\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    }\n    else{\n        delete axios.defaults.headers.common[\"Authorization\"] \n    }\n}\n\nexport default setJWTToken;","import axios from \"axios\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport { GET_ERRORS, SET_USER } from \"./types\";\nimport jwt_decode from \"jwt-decode\"\n\nexport const createUser = (user,history) =>async dispatch =>{\n    try {\n        await axios.post(\"/api/users/register\",user);\n        history.push(\"/login\");\n        dispatch({\n            type: GET_ERRORS,\n            payload:{}\n        })\n    } catch (error) {\n        dispatch({\n            type: GET_ERRORS,\n            payload:error.response.data\n        })\n    }\n};\n\nexport const login = LoginRequest =>async dispatch =>{\n    try {\n        //login request\n        const res = await axios.post(\"/api/users/login\",LoginRequest);\n        //extract token from res.data\n\n        const {token} = res.data;\n       // store the token in local\n       localStorage.setItem(\"jwtToken\",token);\n       //set out token in header\n       setJWTToken(token);\n       //decode tokenn on React\n        const decoded = jwt_decode (token)\n       //dispatch to our security Reducer\n\n       dispatch({\n           type:SET_USER,\n           payload:decoded\n       })\n\n    } catch (error) {\n        dispatch({\n            type: GET_ERRORS,\n            payload:error.response.data\n        })\n    }\n}\n\nexport const logout =() =>dispatch =>{\n    localStorage.removeItem(\"jwtToken\");\n    setJWTToken(false);\n    dispatch({\n        type:SET_USER,\n        payload:{}\n    })\n\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { logout } from '../../actions/securityActions';\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\n\nclass Header extends Component {\n    logout(e){\n        e.preventDefault();\n        this.props.logout();\n        window.location.href = \"/\";\n    }\n\n\n    render() {\n        const {user,authenticated} = this.props.security;\n        const userIsAuthenticated=(\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/dashboard\" className=\"nav-link\" >\n                            Dashboard\n                        </Link>\n                    </li>\n                </ul>\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <a  className=\"nav-link \" >\n                            <i className=\"fas fa-user-circle\" />{user.fullName}\n                        </a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/logout\" className=\"nav-link\" onClick = {this.logout.bind(this)}>\n                            Logout\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n        const userNotAuthenticated=(\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/register\" className=\"nav-link \" >\n                            Sign Up\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/login\" className=\"nav-link\" >\n                            Login\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        )\n\n        let headerLinks;\n\n        if(authenticated && user){\n            headerLinks = userIsAuthenticated\n        }\n        else{\n            headerLinks = userNotAuthenticated\n        }\n\n\n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n            <div className=\"container\">\n                <Link to=\"\" className=\"navbar-brand\" href=\"Dashboard.html\">\n                    Personal Project Management Tool\n                </Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\n                    <span className=\"navbar-toggler-icon\" />\n                </button>\n    \n                {headerLinks}\n            </div>\n        </nav>\n        )\n    }\n}\n\nHeader.propTypes ={\n    \n    logout : PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired,\n    security:PropTypes.object.isRequired\n}\nconst mapStateToProps = state =>({\n    security:state.security,\n    errors:state.errors,\n\n});\n\nexport default connect(mapStateToProps,{logout}) (Header);\n","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport {createProject} from \"../../actions/projectActions\"\nimport classnames from \"classnames\"\n\nclass AddProject extends Component {\n    constructor(){\n        super();\n        this.state={\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors:{},\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    //life cycle hooks\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({\n                errors:nextProps.errors\n            })\n        }\n    }\n\n    onChange(e){\n        this.setState({\n            [e.target.name] : e.target.value,\n        })\n\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const newProject = {\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date,\n        };\n        this.props.createProject(newProject,this.props.history)\n    }\n\n    render() {\n        const {errors} = this.state;\n\n\n        return (\n            <div>\n            <h1>{errors.projectName}</h1>\n                <div className=\"project\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                                <hr />\n                                <form onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.projectName\n                                        })} placeholder=\"Project Name\" name=\"projectName\" value={this.state.projectName} onChange={this.onChange} />\n                                        {errors.projectName && (\n                                            <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.projectIdentifier\n                                        })}  placeholder=\"Unique Project ID\" name=\"projectIdentifier\" value ={this.state.projectIdentifier} onChange={this.onChange} />\n                                        {errors.projectIdentifier && (\n                                            <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <textarea className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.description\n                                        })}  placeholder=\"Project Description\" name = \"description\" value={this.state.description} onChange={this.onChange} ></textarea>\n                                        {errors.description && (\n                                            <div className=\"invalid-feedback\">{errors.description}</div>\n                                        )}\n                                    </div>\n                                    <h6>Start Date</h6>\n                                    <div className=\"form-group\">\n                                        <input type=\"date\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.start_date\n                                        })}  name=\"start_date\" value={this.state.start_date} onChange={this.onChange} />\n                                        {errors.start_date && (\n                                            <div className=\"invalid-feedback\">{errors.start_date}</div>\n                                        )}\n                                    </div>\n                                    <h6>Estimated End Date</h6>\n                                    <div className=\"form-group\">\n                                        <input type=\"date\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.end_date\n                                        })}  name=\"end_date\" value={this.state.end_date} onChange={this.onChange} />\n                                        {errors.end_date && (\n                                            <div className=\"invalid-feedback\">{errors.end_date}</div>\n                                        )}\n                                    </div>\n\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nAddProject.propTypes ={\n    createProject : PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired\n}\nconst mapStateToProps = state =>({\n    errors:state.errors,\n\n});\n\nexport default connect(mapStateToProps,{createProject}) (AddProject)","import {GET_BACKLOG,GET_PROJECT_TASK,DELETE_PROJECT_TASK} from \"../actions/types\"\n\nconst initialState = {\n    project_tasks:[],\n    project_task:{}\n}\nexport default function(state=initialState,action){\n    switch(action.type){\n        case GET_BACKLOG:\n            return {\n                ...state,\n                project_tasks: action.payload\n            };\n\n        case GET_PROJECT_TASK:\n            return {\n                ...state,\n                project_task: action.payload\n            }\n        case DELETE_PROJECT_TASK:\n            return {\n                ...state,\n                project_tasks:state.project_tasks.filter(project_task=>project_task.projectSequence !== action.payload)\n            }\n\n\n\n        default:\n            return state;\n    }\n}","import {GET_ERRORS} from \"../actions/types\";\n\nconst initialState = {};\nexport default function(state=initialState,action){\n    switch(action.type){\n        case GET_ERRORS:\n            return action.payload;\n\n        default: \n            return state;\n    }\n}","import { GET_PROJECTS,GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\n\nconst initialState = {\n    projects:[],\n    project:{}\n};\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case GET_PROJECTS:\n            return {\n                ...state,\n                projects: action.payload\n            };\n        case GET_PROJECT:\n            return {\n                ...state,\n                project:action.payload\n            }\n        case DELETE_PROJECT:\n            return {\n                ...state,\n                projects:state.projects.filter(project=>project.projectSequence !== action.payload)\n            }\n\n        default:\n            return state;\n    }\n}","import { SET_USER } from \"../actions/types\";\n\n\nconst initialState = {\n    user:{},\n    authenticated : false\n};\n\nconst booleanActionPayload =(payload)=>{\n    if(payload){\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case SET_USER:\n            return {\n                ...state,\n                authenticated : booleanActionPayload(action.payload),\n                user: action.payload\n            };\n\n\n        default:\n            return state;\n    }\n}","import { combineReducers} from \"redux\";\nimport backlogReducer from \"./backlogReducer\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport securityReducer from \"./securityReducer\";\nexport default combineReducers({\n    errors:errorReducer,\n    project:projectReducer,\n    backlog: backlogReducer,\n    security:securityReducer\n});","import { createStore,applyMiddleware,compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\"\n\nconst initialState = {}\nconst middleware = [thunk]\n\nlet store ;\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n    store = createStore(rootReducer,initialState,compose(applyMiddleware(...middleware),ReactReduxDevTools));\n} else {\n    store = createStore(rootReducer,initialState,compose(applyMiddleware(...middleware)));\n}\n\n\n\n\nexport default store;","import React, { Component } from 'react'\nimport {getProject,createProject} from \"../../actions/projectActions\"\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport classnames from \"classnames\"\n\n\nclass UpdateProject extends Component {\n    constructor(){\n        super();\n        this.state={\n            id:\"\",\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors:{},\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    //life cycle hooks\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({\n                errors:nextProps.errors\n            })\n        }\n        const {id,\n        projectName,\n        projectIdentifier,\n        description,\n        start_date,\n        end_date,\n        errors,}=nextProps.project;\n        this.setState({\n            id,\n        projectName,\n        projectIdentifier,\n        description,\n        start_date,\n        end_date,\n        })\n\n    }\n\n    componentDidMount(){\n        this.props.getProject(this.props.match.params.id,this.props.history)\n    }\n\n    onChange(e){\n        this.setState({\n            [e.target.name] : e.target.value,\n        })\n\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const updateProject = {\n            id:this.state.id,\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date,\n        };\n        this.props.createProject(updateProject,this.props.history)\n    }\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <div className=\"project\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h5 className=\"display-4 text-center\">Update Project form</h5>\n                            <hr />\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.projectName\n                                        })} placeholder=\"Project Name\" name=\"projectName\" value={this.state.projectName} onChange={this.onChange} />\n                                    {errors.projectName && (\n                                        <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.projectIdentifier\n                                        })} placeholder=\"Unique Project ID\" name=\"projectIdentifier\" value ={this.state.projectIdentifier}\n                                        disabled />\n                                    {errors.projectIdentifier && (\n                                        <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\n                                    )}\n                                </div>\n                                \n                                <div className=\"form-group\">\n                                    <textarea className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.description\n                                        })} placeholder=\"Project Description\" name = \"description\" value={this.state.description} onChange={this.onChange}></textarea>\n                                    {errors.description && (\n                                        <div className=\"invalid-feedback\">{errors.description}</div>\n                                    )}\n                                </div>\n                                <h6>Start Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.start_date\n                                        })} name=\"start_date\" value={this.state.start_date} onChange={this.onChange}/>\n                                    {errors.start_date && (\n                                        <div className=\"invalid-feedback\">{errors.start_date}</div>\n                                    )}\n                                </div>\n                                <h6>Estimated End Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.end_date\n                                        })}  name=\"end_date\" value={this.state.end_date} onChange={this.onChange}/>\n                                    {errors.end_date && (\n                                        <div className=\"invalid-feedback\">{errors.end_date}</div>\n                                    )}\n                                </div>\n\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nUpdateProject.propTypes={\n    getProject:PropTypes.func.isRequired,\n    project: PropTypes.object.isRequired,\n    errors:PropTypes.object.isRequired,\n    createProject: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state =>({\n    project:state.project.project,\n    errors:state.errors,\n});\n\nexport default connect(mapStateToProps,{getProject,createProject}) (UpdateProject);","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport { deleteProjectTask } from '../../../actions/backlogActions';\n\nclass ProjectTask extends Component {\n    onDeleteClick = (backlog_id,pt_id) =>{\n        this.props.deleteProjectTask(backlog_id,pt_id);\n    }\n\n    render() {\n        const {project_task} = this.props;\n        let priorityString;\n        let PriorityClass;\n\n        if(project_task.priority===1) {\n            PriorityClass = \"bg-danger text-light\"\n            priorityString = \"HIGH\"\n        }\n        else if (project_task.priority===2){\n            PriorityClass = \"bg-warning text-light\"\n            priorityString = \"MEDIUM\"\n        }\n        else if(project_task.priority===3){\n            PriorityClass = \"bg-info text-light\"\n            priorityString = \"LOW\"\n        }\n\n\n        return (\n            <div className=\"card mb-1 bg-light\">\n\n                <div className={`card-header text-primary ${PriorityClass}`}>\n                    ID: {project_task.projectSequence}-- Priority: {priorityString}\n                </div>\n                <div className=\"card-body bg-light\">\n                    <h5 className=\"card-title\">{project_task.summary}</h5>\n                    <p className=\"card-text text-truncate \">\n                        {project_task.acceptanceCriteria}\n                    </p>\n                    <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">\n                        View / Update\n                    </Link>\n\n                    <button className=\"btn btn-danger ml-4\" onClick={this.onDeleteClick.bind(this,project_task.projectIdentifier,project_task.projectSequence)}>\n                        Delete\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nProjectTask.propTypes={\n    deleteProjectTask:PropTypes.func.isRequired,\n}\n\n\nexport default  connect(null,{deleteProjectTask}) (ProjectTask);\n","import axios from \"axios\";\nimport { DELETE_PROJECT_TASK, GET_BACKLOG, GET_ERRORS, GET_PROJECT_TASK } from \"./types\";\n\nexport const addProjectTask = (backlog_id,project_task,history) =>async dispatch =>{\n    try {\n        await axios.post( `/api/backlog/${backlog_id}`,project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type:GET_ERRORS,\n            payload:{}\n        })\n    } catch (error) {\n        dispatch({\n            type:GET_ERRORS,\n            payload:error.response.data\n        })\n    }\n\n}\n\nexport const getBacklog = (backlog_id) => async dispatch =>{\n    try{\n        const res = await axios.get(`/api/backlog/${backlog_id}`)\n        console.log(res.data);\n        dispatch({\n            type:GET_BACKLOG,\n            payload:res.data\n        });\n    }\n    catch(error){\n        dispatch({\n            type: GET_ERRORS,\n            payload: error.response.data\n          });\n    }\n}\n\nexport const getProjectTask =(backlog_id,pt_id,history) =>async dispatch =>{\n    try{\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`)\n        console.log(res.data);\n        dispatch({\n            type:GET_PROJECT_TASK,\n            payload:res.data\n        });\n    }\n    catch(error){\n        history.push(\"/dashboard\");\n    }\n}\n\nexport const updateProjectTask =(backlog_id,pt_id,project_task,history) =>async dispatch=>{\n    try {\n        await axios.patch( `/api/backlog/${backlog_id}/${pt_id}`,project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type:GET_ERRORS,\n            payload:{}\n        })\n    } catch (error) {\n        dispatch({\n            type:GET_ERRORS,\n            payload:error.response.data\n        })\n    }\n}\n\nexport const deleteProjectTask =(backlog_id,pt_id) => async dispatch =>{\n    if(window.confirm(\"Are you sure? This will delete the project task and all the data related to it\")){\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`)\n        dispatch({\n            type:DELETE_PROJECT_TASK,\n            payload:pt_id\n        })\n    }\n}\n\n","import React, { Component } from 'react'\nimport ProjectTask from './ProjectTasks/ProjectTask'\n\nclass Backlog extends Component {\n    render() {\n        const {project_tasks_prop} = this.props;\n        const tasks=project_tasks_prop.map(project_task =>(\n            //<p> {project_task}</p>\n            <ProjectTask key={project_task.id} project_task={project_task} />\n        ));\n\n        let todoitems =[];\n        let inprogressitems =[];\n        let doneitems =[];\n\n        for(let i=0;i<tasks.length;i++){\n            if(tasks[i].props.project_task.status ===\"TO_DO\"){\n                todoitems.push(tasks[i]);\n            }\n            else if(tasks[i].props.project_task.status ===\"IN_PROGRESS\"){\n                inprogressitems.push(tasks[i]);\n            }\n            else if(tasks[i].props.project_task.status ===\"DONE\"){\n                doneitems.push(tasks[i]);\n            }\n\n        }\n\n\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-secondary text-white\">\n                                <h3>TO DO</h3>\n                            </div>\n                        </div>\n\n\n                        {todoitems}\n\n\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-primary text-white\">\n                                <h3>In Progress</h3>\n                            </div>\n                        </div>\n                        {\n                        //<!-- SAMPLE PROJECT TASK STARTS HERE -->\n\n                        //<!-- SAMPLE PROJECT TASK ENDS HERE -->\n                        }\n                        {inprogressitems}\n                       \n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-success text-white\">\n                                <h3>Done</h3>\n                            </div>\n                        </div>\n                        {\n                        //<!-- SAMPLE PROJECT TASK STARTS HERE -->\n\n                        //<!-- SAMPLE PROJECT TASK ENDS HERE -->\n                        }\n                        {doneitems}\n                        \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Backlog\n","import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\"\nimport Backlog from './Backlog';\nimport { getBacklog } from '../../actions/backlogActions';\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\"\nimport { DiagnosticCategory } from 'typescript';\n\nclass ProjectBoard extends Component {\n    constructor(){\n        super();\n        this.state ={\n            errors:{}\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n          this.setState({ errors: nextProps.errors });\n        }\n      }\n\n    componentDidMount(){\n        const {id} = this.props.match.params;\n        this.props.getBacklog(id);\n    }\n//<Backlog project_tasks_prop={project_tasks} />\n    render() {\n        const {id} = this.props.match.params;\n        const {errors} = this.state;\n        const {project_tasks} = this.props.backlog;\n\n        let BoardContent;\n\n        const boardAlgorithm = (errors,project_tasks)=>{\n            if(project_tasks.length <1){\n                if(errors.projectNotFound){\n                    return (\n                        <div className=\"alert alert-danger text-center\" role='alert'>\n                            {errors.projectNotFound}\n\n                        </div>\n                    )\n                }\n                else if(errors.projectIdentifier){\n                    return (\n                        <div className=\"alert alert-danger text-center\" role='alert'>\n                            {errors.projectIdentifier}\n\n                        </div>\n                    )\n                }\n                else{\n                    return (\n                        <div className=\"alert alert-info text-center\" role='alert'>\n                            No Project Tasks in this Board\n                        </div>\n                    )\n                }\n            }\n            else{\n                return (\n                        <Backlog project_tasks_prop={project_tasks} />\n                )\n            }\n        };\n\n        BoardContent = boardAlgorithm(errors,project_tasks)\n\n        return (\n            <div className=\"container\">\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n                    <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n                </Link>\n                <br />\n                <hr />\n\n                {BoardContent}\n\n            </div>\n        )\n\n    }\n}\n\nProjectBoard.propTypes ={\n    backlog: PropTypes.object.isRequired,\n    getBacklog:PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state =>({\n    backlog: state.backlog,\n    errors: state.errors,\n\n})\n\nexport default connect(mapStateToProps,{getBacklog}) (ProjectBoard);\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport {addProjectTask} from \"../../../actions/backlogActions\"\nimport classnames from \"classnames\"\n\nclass AddProjectTask extends Component {\n\n    constructor(props){\n        super(props)\n        const {id} = this.props.match.params;\n\n        this.state={\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: 0,\n            dueDate: \"\",\n            projectIdentifier: id,\n            errors:{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    //life cycle hooks\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({\n                errors:nextProps.errors\n            })\n        }\n    }\n\n    onChange(e){\n        this.setState({\n            [e.target.name] : e.target.value,\n        })\n\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const newProject = {\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate,\n        };\n        this.props.addProjectTask(this.state.projectIdentifier,newProject,this.props.history)\n    }\n\n    render() {\n        const {id} = this.props.match.params;\n        const {errors} = this.state;\n        return (\n            <div className=\"add-PBI\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link to={ `/projectBoard/${id}`} className=\"btn btn-light\">\n                                Back to Project Board\n                            </Link>\n                            <h4 className=\"display-4 text-center\">Add Project Task</h4>\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\n                                            \"is-invalid\":errors.summary\n                                        })}\n                                    name=\"summary\" placeholder=\"Project Task summary\" value={this.state.summary} onChange={this.onChange} />\n                                    {errors.summary && (\n                                            <div className=\"invalid-feedback\">{errors.summary}</div>\n                                        )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea className=\"form-control form-control-lg\" placeholder=\"Acceptance Criteria\" name=\"acceptanceCriteria\" value={this.state.acceptanceCriteria} onChange={this.onChange} ></textarea>\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\" className=\"form-control form-control-lg\" name=\"dueDate\" value={this.state.dueDate} onChange={this.onChange} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <select className=\"form-control form-control-lg\" name=\"priority\" value={this.state.priority} onChange={this.onChange} >\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <select className=\"form-control form-control-lg\" name=\"status\" value = {this.state.status} onChange={this.onChange} >\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nAddProjectTask.propTypes ={\n    addProjectTask : PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired\n}\nconst mapStateToProps = state =>({\n    errors:state.errors,\n\n});\n\nexport default  connect(mapStateToProps,{addProjectTask}) (AddProjectTask);\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { getProjectTask, updateProjectTask } from '../../../actions/backlogActions';\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport classnames from \"classnames\"\n\nclass UpdateProjectTask extends Component {\n    constructor(){\n        super();\n        //const {backlog_id,pt_id} = this.props.match.params;\n\n        this.state={\n            id:\"\",\n            projectSequence: \"\",\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: 0,\n            dueDate: \"\",\n            projectIdentifier: \"\",\n            created_At:\"\",\n            errors:{}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    //life cycle hooks\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({\n                errors:nextProps.errors\n            })\n        }\n        const {id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            projectIdentifier,\n            created_At,}=nextProps.project_task;\n            this.setState({\n                id,\n                projectSequence,\n                summary,\n                acceptanceCriteria,\n                status,\n                priority,dueDate,\n                projectIdentifier,\n                created_At,\n            })\n    }\n\n    componentDidMount(){\n        const {backlog_id} = this.props.match.params;\n        const {pt_id} = this.props.match.params;\n        this.props.getProjectTask(backlog_id,pt_id,this.props.history)\n    }\n\n    onChange(e){\n        this.setState({\n            [e.target.name] : e.target.value,\n        })\n\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const {backlog_id,pt_id} = this.props.match.params;\n        const updatedProjectTask = {\n            id:this.state.id,\n            projectSequence: this.state.projectSequence,\n            projectIdentifier: this.state.projectIdentifier,\n            created_At:this.state.created_At,\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate,\n        };\n        this.props.updateProjectTask(backlog_id,pt_id,updatedProjectTask,this.props.history)\n    }\n\n\n\n    render() {\n        const {errors} = this.state;\n        const {backlog_id} = this.props.match.params;\n\n        return (\n            <div className=\"add-PBI\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link to={ `/projectBoard/${backlog_id}`} className=\"btn btn-light\">\n                                Back to Project Board\n                            </Link>\n                            <h4 className=\"display-4 text-center\">Add Project Task</h4>\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\n                                            \"is-invalid\":errors.summary\n                                        })}\n                                    name=\"summary\" placeholder=\"Project Task summary\" value={this.state.summary} onChange={this.onChange} />\n                                    {errors.summary && (\n                                            <div className=\"invalid-feedback\">{errors.summary}</div>\n                                        )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea className=\"form-control form-control-lg\" placeholder=\"Acceptance Criteria\" name=\"acceptanceCriteria\" value={this.state.acceptanceCriteria} onChange={this.onChange} ></textarea>\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input type=\"date\" className=\"form-control form-control-lg\" name=\"dueDate\" value={this.state.dueDate} onChange={this.onChange} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <select className=\"form-control form-control-lg\" name=\"priority\" value={this.state.priority} onChange={this.onChange} >\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <select className=\"form-control form-control-lg\" name=\"status\" value = {this.state.status} onChange={this.onChange} >\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nUpdateProjectTask.propTypes ={\n    getProjectTask : PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired,\n    project_task: PropTypes.object.isRequired,\n    updateProjectTask:PropTypes.func.isRequired,\n}\nconst mapStateToProps = state =>({\n    project_task: state.backlog.project_task,\n    errors:state.errors,\n\n});\n\nexport default connect(mapStateToProps,{getProjectTask,updateProjectTask}) (UpdateProjectTask)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n    componentDidMount(){\n        if(this.props.security.authenticated){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"landing\">\n                <div className=\"light-overlay landing-inner text-dark\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 text-center\">\n                                <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\n                                <p className=\"lead\">\n                                    Create your account to join active projects or start your own\n                                </p>\n                                <hr />\n                                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                                    Sign Up\n                                </Link>\n                                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                                    Login\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nLanding.propTypes ={\n    \n    errors:PropTypes.object.isRequired,\n    security:PropTypes.object.isRequired\n}\nconst mapStateToProps = state =>({\n    security:state.security,\n    errors:state.errors,\n\n});\n\nexport default connect(mapStateToProps) (Landing);\n","import React, { Component } from 'react'\nimport { login } from '../../actions/securityActions';\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport classnames from \"classnames\"\n\nclass Login extends Component {\n    constructor(){\n        super();\n        this.state={\n            username: \"\",\n            password: \"\",\n            errors:{},\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.security.authenticated){\n            this.props.history.push(\"/dashboard\");\n        }\n        if(nextProps.errors){\n            this.setState({\n                errors:nextProps.errors\n            })\n        }\n    }\n\n    componentDidMount(){\n        if(this.props.security.authenticated){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    onChange(e){\n        this.setState({\n            [e.target.name] : e.target.value,\n        })\n\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const user = {\n            username: this.state.username,\n            password: this.state.password,\n        };\n        this.props.login(user)\n    }\n\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <div className=\"login\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Log In</h1>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"email\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.username\n                                        })} placeholder=\"Email Address\" name=\"username\" value = {this.state.username} onChange={this.onChange} />\n                                        {errors.username && (\n                                            <div className=\"invalid-feedback\">{errors.username}</div>\n                                        )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.password\n                                        })}placeholder=\"Password\" name=\"password\" value = {this.state.password} onChange={this.onChange}/>\n                                        {errors.password && (\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\n                                        )}\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nLogin.propTypes ={\n    \n    login : PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired,\n    security:PropTypes.object.isRequired\n}\nconst mapStateToProps = state =>({\n    security:state.security,\n    errors:state.errors,\n\n});\n\nexport default connect(mapStateToProps,{login}) (Login);\n","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport {createProject} from \"../../actions/projectActions\"\nimport classnames from \"classnames\"\nimport { createUser } from '../../actions/securityActions'\n\nclass Register extends Component {\n\n    constructor(){\n        super();\n        this.state={\n            username: \"\",\n            fullName: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            errors:{},\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({\n                errors:nextProps.errors\n            })\n        }\n    }\n\n    componentDidMount(){\n        if(this.props.security.authenticated){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    onChange(e){\n        this.setState({\n            [e.target.name] : e.target.value,\n        })\n\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const newUser = {\n            username: this.state.username,\n            fullName: this.state.fullName,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword,\n        };\n        this.props.createUser(newUser,this.props.history)\n    }\n\n    render() {\n        const {errors} = this.state;\n        //console.log(errors);\n        return (\n            <div className=\"register\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\n                            <p className=\"lead text-center\">Create your Account</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.fullName\n                                        })}  placeholder=\"Name\" name=\"fullName\" value ={this.state.fullName } onChange ={this.onChange}\n                                         />\n                                    {errors.fullName && (\n                                            <div className=\"invalid-feedback\">{errors.fullName}</div>\n                                        )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"email\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.username\n                                        })} placeholder=\"Email Address\" name=\"username\" value ={this.state.username } onChange ={this.onChange}/>\n                                    {errors.username && (\n                                            <div className=\"invalid-feedback\">{errors.username}</div>\n                                        )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.password\n                                        })} placeholder=\"Password\" name=\"password\" value ={this.state.password } onChange ={this.onChange}/>\n                                    {errors.password && (\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\n                                        )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg \",{\n                                            \"is-invalid\":errors.confirmPassword\n                                        })} placeholder=\"Confirm Password\"\n                                        name=\"confirmPassword\" value ={this.state.confirmPassword } onChange ={this.onChange}/>\n                                        {errors.confirmPassword && (\n                                            <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\n                                        )}\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nRegister.propTypes ={\n    \n    createUser : PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired,\n    security:PropTypes.object.isRequired\n}\nconst mapStateToProps = state =>({\n    errors:state.errors,\n    security:state.security,\n\n});\n\nexport default connect(mapStateToProps,{createUser}) (Register);\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect, Connect } from 'react-redux'\nimport PropTypes from \"prop-types\"\n\nconst SecuredRoute = ({component:Component,security, ...otherProps}) =>(\n    <Route {...otherProps} render ={props => security.authenticated===true?(<Component {...props} />) : (<Redirect to=\"login\"/>)} />\n);\n\nSecuredRoute.propTypes ={\n    security:PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state =>({\n    security:state.security,\n});\n\nexport default connect(mapStateToProps) (SecuredRoute);\n\n","import './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport {BrowserRouter as Router, Route,Switch} from \"react-router-dom\";\nimport AddProject from './components/Project/AddProject';\nimport {Provider} from \"react-redux\";\nimport store from './store';\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './components/Layout/Landing';\nimport Login from './components/UseManagement/Login';\nimport Register from './components/UseManagement/Register';\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from './securityUtils/setJWTToken';\nimport { SET_USER } from './actions/types';\nimport { logout } from './actions/securityActions';\nimport SecureRoute from './securityUtils/SecureRoute';\n\nconst{jwtToken} = localStorage;\n\nif(jwtToken){\n  setJWTToken(jwtToken);\n  const decoded = jwt_decode(jwtToken);\n  store.dispatch({\n    type:SET_USER,\n    payload:decoded\n  })\n\n  const currentTime = Date.now()/1000;\n  if(decoded.exp<currentTime){\n    //handle logout\n    store.dispatch(logout())\n    window.location.href = \"/\";\n  }\n\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          {\n            //public Routes\n          }\n          <Route exact path=\"/\" component ={Landing}/>\n          <Route exact path=\"/login\" component ={Login}/>\n          <Route exact path=\"/register\" component ={Register}/>\n          {\n            //Private Routes\n          }\n          <Switch>\n          <SecureRoute exact path=\"/addProject\" component ={AddProject} />\n          <SecureRoute exact path=\"/dashboard\" component ={Dashboard} />\n          <SecureRoute exact path=\"/updateProject/:id\" component ={UpdateProject} />\n          <SecureRoute exact path =\"/projectBoard/:id\" component={ProjectBoard} />\n          <SecureRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n          <SecureRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask} />\n          </Switch>\n\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}